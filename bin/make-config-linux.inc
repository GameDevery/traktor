# Configuration file

CC=gcc
CC_FLAGS_COMMON=-fno-common
CC_FLAGS_DEBUG_SHARED=$(CC_FLAGS_COMMON) -march=core2 -g -D _UNICODE -D UNICODE -D __LINUX__ -fPIC
CC_FLAGS_RELEASE_SHARED=$(CC_FLAGS_COMMON) -march=core2 -O3 -D _UNICODE -D UNICODE -D __LINUX__ -fPIC
CC_FLAGS_DEBUG_STATIC=$(CC_FLAGS_COMMON) -march=core2 -g -D _UNICODE -D UNICODE -D __LINUX__ -fPIC
CC_FLAGS_RELEASE_STATIC=$(CC_FLAGS_COMMON) -march=core2 -O3 -D _UNICODE -D UNICODE -D __LINUX__ -fPIC
CC_FLAGS_DEBUG_EXECUTABLE=$(CC_FLAGS_COMMON) -march=core2 -g -D _UNICODE -D UNICODE -D __LINUX__ -fPIC
CC_FLAGS_RELEASE_EXECUTABLE=$(CC_FLAGS_COMMON) -march=core2 -O3 -D _UNICODE -D UNICODE -D __LINUX__ -fPIC

AR=ar
AR_FLAGS_COMMON=-r -s
AR_FLAGS_DEBUG_STATIC=$(AR_FLAGS_COMMON)
AR_FLAGS_RELEASE_STATIC=$(AR_FLAGS_COMMON)

LINK=c++
LINK_FLAGS_COMMON=-Wl,-rpath=\$ORIGIN
LINK_FLAGS_DEBUG_SHARED=$(LINK_FLAGS_COMMON)
LINK_FLAGS_RELEASE_SHARED=$(LINK_FLAGS_COMMON)
LINK_FLAGS_DEBUG_STATIC=$(LINK_FLAGS_COMMON)
LINK_FLAGS_RELEASE_STATIC=$(LINK_FLAGS_COMMON)
LINK_FLAGS_DEBUG_EXECUTABLE=$(LINK_FLAGS_COMMON)
LINK_FLAGS_RELEASE_EXECUTABLE=$(LINK_FLAGS_COMMON)
LINK_LIBS=

ADDITIONAL_INCLUDE_PATHS=
ADDITIONAL_LIBRARY_PATHS=

BINARY_INCLUDE=BinaryInclude
