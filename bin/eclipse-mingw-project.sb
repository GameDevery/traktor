<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name><?-- output:print(project:getName()) --?></name>
	<comment></comment>
	<projects>
<?--

local dependencies = project:getDependencies()
for i = 0, dependencies:length() - 1 do
	local dependency = dependencies:get(i)
	if getmetatable(dependency) == ProjectDependency then
		output:printLn("\t\t<project>" .. dependency:getName() .. "</project>")
	end
end

--?>	</projects>
	<buildSpec>
		<buildCommand>
			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
			<triggers>clean,full,incremental,</triggers>
			<arguments>
				<dictionary>
					<key>?name?</key>
					<value></value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.append_environment</key>
					<value>true</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.buildArguments</key>
					<value></value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.buildCommand</key>
					<value>make</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.buildLocation</key>
					<value>${workspace_loc:/<?-- output:print(project:getName()) --?>/Debug}</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.contents</key>
					<value>org.eclipse.cdt.make.core.activeConfigSettings</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.enableAutoBuild</key>
					<value>false</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.enableCleanBuild</key>
					<value>true</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.enableFullBuild</key>
					<value>true</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.stopOnError</key>
					<value>true</value>
				</dictionary>
				<dictionary>
					<key>org.eclipse.cdt.make.core.useDefaultBuildCmd</key>
					<value>true</value>
				</dictionary>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
			<triggers>full,incremental,</triggers>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.cdt.core.cnature</nature>
		<nature>org.eclipse.cdt.core.ccnature</nature>
		<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>
		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
	</natures>
	<linkedResources>
<?--

function generateItemLink(item, filterPath)
	if getmetatable(item) == File then
		local files = item:getSystemFiles(project:getSourcePath())
		for i = 0, files:length() - 1 do
			local file = files:get(i)

			local filePath = fileSystem:getAbsolutePath(file)
			local relativeFilePath = fileSystem:getRelativePath(
				filePath,
				projectPath
			)
			
			output:printLn("\t\t<link>")
			output:printLn("\t\t\t<name>" .. filterPath .. relativeFilePath:getFileName() .. "</name>")
			output:printLn("\t\t\t<type>1</type>")
			output:printLn("\t\t\t<locationURI>PROJECT_LOC" .. relativeFilePath:getPathName() .. "</locationURI>")
			output:printLn("\t\t</link>")
		end
	end
	if getmetatable(item) == Filter then
		output:printLn("\t\t<link>")
		output:printLn("\t\t\t<name>" .. filterPath .. item:getName() .. "</name>")
		output:printLn("\t\t\t<type>2</type>")
		output:printLn("\t\t\t<locationURI>virtual:/virtual</locationURI>")
		output:printLn("\t\t</link>")

		-- Recurse with child items.
		local childFilterPath = filterPath .. item:getName() .. "/"
		local childItems = item:getItems()
		for i = 0, childItems:length() - 1 do
			generateItemLink(childItems:get(i), childFilterPath)
		end
	end
end

local items = project:getItems()
for i = 0, items:length() - 1 do
	generateItemLink(items:get(i), "")
end

--?>	</linkedResources>
</projectDescription>
