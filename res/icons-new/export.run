import(traktor)
import(traktor.drawing)

local outputs =
{
	{
		name = "Editor",
		-- path = "../../code/Editor/App/Resources",
		path = "../themes/%s/Images/Editor",
		resources =
		{
			{ name = "Save", column = 0, row = 0, width = 1, height = 1 },
			{ name = "Cut", column = 1, row = 0, width = 1, height = 1 },
			{ name = "Copy", column = 2, row = 0, width = 1, height = 1 },
			{ name = "Paste", column = 3, row = 0, width = 1, height = 1 },
			{ name = "Undo", column = 4, row = 0, width = 1, height = 1 },
			{ name = "Redo", column = 5, row = 0, width = 1, height = 1 },
			{ name = "Build", column = 6, row = 0, width = 1, height = 1 },
			{ name = "CancelBuild", column = 7, row = 0, width = 1, height = 1 },
			{ name = "LogInfo", column = 8, row = 0, width = 1, height = 1 },
			{ name = "LogWarning", column = 9, row = 0, width = 1, height = 1 },
			{ name = "LogError", column = 10, row = 0, width = 1, height = 1 },
			{ name = "NameFilter", column = 0, row = 1, width = 1, height = 1 },
			{ name = "TypeFilter", column = 1, row = 1, width = 1, height = 1 },
			{ name = "ShowFiltered", column = 2, row = 1, width = 1, height = 1 },
			{ name = "Favorites", column = 3, row = 1, width = 1, height = 1 },
			{ name = "Types", column = 0, row = 2, width = 23, height = 1 },
			{ name = "TypesHidden", column = 0, row = 3, width = 23, height = 1 },
			{ name = "Folders", column = 0, row = 4, width = 2, height = 1 },
			{ name = "Navigate", column = 0, row = 17, width = 4, height = 1 },
		}
	},
	{
		name = "UI_Dock",
		-- path = "../../code/Ui/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "DockClose", column = 2, row = 25, width = 1, height = 1, base = 12 },
		}
	},
	{
		name = "UI_Tab",
		-- path = "../../code/Ui/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "TabClose", column = 2, row = 25, width = 1, height = 1, base = 12 },
		}
	},	
	{
		name = "UI_TreeView",
		-- path = "../../code/Ui/Custom/TreeView/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "Tree", column = 0, row = 5, width = 4, height = 1 },
		}
	},
	{
		name = "UI_GridView",
		-- path = "../../code/Ui/Custom/GridView/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "GridView", column = 0, row = 5, width = 4, height = 1 },
		}
	},
	{
		name = "UI_LogList",
		-- path = "../../code/Ui/Custom/LogList/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "Log", column = 0, row = 24, width = 3, height = 1, base = 12 },
		}
	},	
	{
		name = "UI_PropertyList",
		-- path = "../../code/Ui/Custom/PropertyList/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "PropertyList", column = 0, row = 5, width = 2, height = 1 },
			{ name = "Unchecked", column = 0, row = 25, width = 1, height = 1, base = 14 },
			{ name = "Checked", column = 1, row = 25, width = 1, height = 1, base = 14 },
			{ name = "SmallCross", column = 2, row = 25, width = 1, height = 1, base = 12 },
			{ name = "SmallDots", column = 3, row = 25, width = 1, height = 1, base = 12 },
			{ name = "SmallPen", column = 4, row = 25, width = 1, height = 1, base = 12 },
			{ name = "SmallPlus", column = 5, row = 25, width = 1, height = 1, base = 12 },
		}
	},
	{
		name = "UI_Sequencer",
		-- path = "../../code/Ui/Custom/Sequencer/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "SequenceExpand", column = 0, row = 5, width = 1, height = 1, base = 9 },
			{ name = "SequenceCollapse", column = 1, row = 5, width = 1, height = 1, base = 9 },
			{ name = "SequenceVisible", column = 5, row = 7, width = 1, height = 1 },
			{ name = "SequenceHidden", column = 6, row = 7, width = 1, height = 1 },
		}
	},
	{
		name = "UI_Layer",
		-- path = "../../code/Ui/Custom/Layer/Resources",
		path = "../themes/%s/Images/UI",
		resources =
		{
			{ name = "LayerVisible", column = 5, row = 7, width = 1, height = 1 },
			{ name = "LayerHidden", column = 6, row = 7, width = 1, height = 1 },
		}
	},	
	{
		name = "Script",
		--path = "../../code/Script/Editor/Resources",
		path = "../themes/%s/Images/Script",
		resources =
		{
			{ name = "ToggleComments", column = 0, row = 6, width = 1, height = 1 },
			{ name = "RemoveBreakpoints", column = 1, row = 6, width = 1, height = 1 },
			{ name = "DebugStop", column = 2, row = 6, width = 1, height = 1 },
			{ name = "DebugContinue", column = 3, row = 6, width = 1, height = 1 },
			{ name = "DebugStepInto", column = 4, row = 6, width = 1, height = 1 },
			{ name = "DebugStepOver", column = 5, row = 6, width = 1, height = 1 },
			{ name = "ProfilerClear", column = 6, row = 6, width = 1, height = 1 },
			{ name = "Breakpoint", column = 7, row = 6, width = 1, height = 1, base = 12 },
			{ name = "Current", column = 7, row = 18, width = 1, height = 1, base = 12 },
			{ name = "AddDependency", column = 8, row = 6, width = 1, height = 1 },
			{ name = "RemoveDependency", column = 9, row = 6, width = 1, height = 1 },
			{ name = "MoveDependencyUp", column = 10, row = 6, width = 1, height = 1 },
			{ name = "MoveDependencyDown", column = 11, row = 6, width = 1, height = 1 },
			{ name = "DefineGlobalFunction", column = 12, row = 6, width = 1, height = 1 },
			{ name = "DefineLocalFunction", column = 13, row = 6, width = 1, height = 1 },
			{ name = "ReferenceFunction", column = 14, row = 6, width = 1, height = 1 },
			{ name = "SearchCaseSensitive", column = 15, row = 6, width = 1, height = 1 },
			{ name = "SearchWholeWord", column = 16, row = 6, width = 1, height = 1 },
			{ name = "SearchWildCard", column = 17, row = 6, width = 1, height = 1 },
		}
	},
	{
		name = "Spray",
		-- path = "../../code/Spray/Editor/Resources",
		path = "../themes/%s/Images/Spray",
		resources =
		{
			{ name = "Randomize", column = 0, row = 7, width = 1, height = 1 },
			{ name = "ToggleGuideLines", column = 1, row = 7, width = 1, height = 1 },
			{ name = "ToggleMoveEmitter", column = 2, row = 7, width = 1, height = 1 },
			{ name = "ToggleGroundClip", column = 3, row = 7, width = 1, height = 1 },
			{ name = "BrowseBackground", column = 4, row = 7, width = 1, height = 1 },
			{ name = "BrowseImageProcess", column = 5, row = 7, width = 1, height = 1 },
			{ name = "Playback", column = 0, row = 14, width = 6, height = 1 },
			{ name = "LayerVisible", column = 6, row = 7, width = 1, height = 1 },
			{ name = "LayerHidden", column = 7, row = 7, width = 1, height = 1 },
			{ name = "LayerDelete", column = 10, row = 7, width = 1, height = 1 },		
		}
	},
	{
		name = "Shader",
		-- path = "../../code/Render/Editor/Shader/Resources",
		path = "../themes/%s/Images/Shader",
		resources =
		{
			{ name = "Tools", column = 0, row = 8, width = 14, height = 1 },
		}
	},
	{
		name = "Texture",
		-- path = "../../code/Render/Editor/Texture/Resources",
		path = "../themes/%s/Images/Texture",
		resources =
		{
			{ name = "PlusMinus", column = 0, row = 12, width = 2, height = 1 },
		}
	},
	{
		name = "Scene",
		-- path = "../../code/Scene/Editor/Resources",
		path = "../themes/%s/Images/Scene",
		resources =
		{
			{ name = "Pointer", column = 0, row = 9, width = 1, height = 1 },
			{ name = "Translate", column = 1, row = 9, width = 1, height = 1 },
			{ name = "Rotate", column = 2, row = 9, width = 1, height = 1 },
			{ name = "Snap", column = 3, row = 9, width = 1, height = 1 },
			{ name = "SingleView", column = 4, row = 9, width = 1, height = 1 },
			{ name = "DualView", column = 5, row = 9, width = 1, height = 1 },
			{ name = "QuadView", column = 6, row = 9, width = 1, height = 1 },
			{ name = "Rewind", column = 7, row = 9, width = 1, height = 1 },
			{ name = "Play", column = 8, row = 9, width = 1, height = 1 },
			{ name = "Stop", column = 9, row = 9, width = 1, height = 1 },
			{ name = "LayerVisible", column = 6, row = 7, width = 1, height = 1 },
			{ name = "LayerHidden", column = 7, row = 7, width = 1, height = 1 },
			{ name = "LayerLocked", column = 8, row = 7, width = 1, height = 1 },
			{ name = "LayerUnlocked", column = 9, row = 7, width = 1, height = 1 },
			{ name = "LayerDelete", column = 10, row = 7, width = 1, height = 1 },
			{ name = "Types", column = 0, row = 2, width = 23, height = 1 },
			{ name = "Folders", column = 0, row = 4, width = 2, height = 1 },
			{ name = "RemoveEntity", column = 11, row = 8, width = 1, height = 1 },
			{ name = "MoveToEntity", column = 12, row = 8, width = 1, height = 1 },
			{ name = "ToggleGrid", column = 13, row = 8, width = 1, height = 1 },
			{ name = "ToggleGuide", column = 14, row = 8, width = 1, height = 1 },		
		}
	},
	{
		name = "Amalgam",
		-- path = "../../code/Amalgam/Editor/Resources",
		path = "../themes/%s/Images/Amalgam",
		resources =
		{
			{ name = "Logos", column = 0, row = 10, width = 13, height = 1, base = 24 },
			{ name = "TargetPlay", column = 0, row = 11, width = 1, height = 1, base = 24 },
			{ name = "TargetBuild", column = 1, row = 11, width = 1, height = 1, base = 24 },
			{ name = "TargetMigrate", column = 2, row = 11, width = 1, height = 1, base = 24 },
			{ name = "TargetBrowse", column = 3, row = 11, width = 1, height = 1, base = 24 },
			{ name = "TargetStop", column = 4, row = 11, width = 1, height = 1, base = 24 },
			{ name = "TargetProfile", column = 5, row = 11, width = 1, height = 1, base = 24 },
		}
	},
	{
		name = "Input",
		-- path = "../../code/Input/Editor/Resources",
		path = "../themes/%s/Images/Input",
		resources =
		{
			{ name = "Alignment", column = 0, row = 8, width = 6, height = 1 },
		}
	},
	{
		name = "Animation",
		-- path = "../../code/Animation/Editor/Resources",
		path = "../themes/%s/Images/Animation",
		resources =
		{
			{ name = "Alignment", column = 0, row = 8, width = 6, height = 1 },
			{ name = "Bones", column = 0, row = 13, width = 2, height = 1 },
			{ name = "Skeleton", column = 2, row = 13, width = 5, height = 1 },
			{ name = "Playback", column = 0, row = 14, width = 6, height = 1 },		
		}
	},
	{
		name = "Flash",
		-- path = "../../code/Flash/Editor/Resources",
		path = "../themes/%s/Images/Flash",
		resources =
		{
			{ name = "Playback", column = 0, row = 14, width = 6, height = 1 },
			{ name = "Flash", column = 0, row = 18, width = 2, height = 1 },
		}
	},
	{
		name = "Terrain",
		-- path = "../../code/Terrain/Editor/Resources",
		path = "../themes/%s/Images/Terrain",
		resources =
		{
			{ name = "Terrain", column = 0, row = 15, width = 15, height = 1 },
		}
	},
	{
		name = "Theater",
		-- path = "../../code/Theater/Editor/Resources",
		path = "../themes/%s/Images/Theater",
		resources =
		{
			{ name = "Theater", column = 0, row = 16, width = 8, height = 1 },
		}
	},
	{
		name = "Sound",
		-- path = "../../code/Sound/Editor/Resources",
		path = "../themes/%s/Images/Sound",
		resources =
		{
			{ name = "PlusMinus", column = 0, row = 12, width = 2, height = 1 },
			{ name = "Grain", column = 0, row = 23, width = 4, height = 6, base = 32 },
		}
	},	
	{
		name = "Amalgam_Run",
		-- path = "../../code/Amalgam/Game/App/Resources",
		path = "../themes/%s/Images/Amalgam",
		resources =
		{
			{ name = "Error", column = 0, row = 35, width = 3, height = 10 },
		}
	},		
}

local dpis =
{
	96,
	120,
	144,
	192,
	240
}

-- -j -i Dark
local function export(input, x, y, width, height, dpi, output)
	local inkscape = "c:/program files/inkscape/inkscape.exe"
	local cmd = "\"" .. inkscape .. "\" -e \"" .. output .. "\" -a " .. x .. ":" .. -y .. ":" .. (x + width) .. ":" .. -y + height .. " -d " .. dpi .. " " .. input
	local result = run:execute(cmd, nil)
	return result == 0
end

function main(argv)

	if argv:size() < 1 then
		stdout:printLn("Missing arguments")
		return 1
	end

	for _, g in ipairs(outputs) do
		-- if argv:empty() or argv:get(0) == g.name then
		if true then
			for _, o in ipairs(g.resources) do
				stdout:printLn("Converting " .. g.name .. "/" .. o.name .. "...")

				local path = string.format(g.path, argv:get(0))
				local p = FileSystem.getInstance():getAbsolutePath(Path(path .. "/" .. o.name .. ".image"))
				local f = FileSystem.getInstance():get(p)
				if f == nil or not f:isReadOnly() then

					local sizes = { 0, 0, 0, 0 }
					local base = 16
					if o.base ~= nil then base = o.base end

					if false then

						-- Faux export DPI to export as 16x16 at baseline (if base isn't set).
						local sdpi = 480
						local xdpi = (90 / 2) * (sdpi / 96) * (base / 16)
						export("Icons.svg", o.column * 32, o.row * 32, o.width * 32, o.height * 32, xdpi, sdpi .. ".png")

						-- Generate PNG at different DPI resolutions.
						local source = Image.loadFromFile(sdpi .. ".png")
						for j, dpi in ipairs(dpis) do

							-- Produce scaled version of image.
							if dpi ~= sdpi then
								local scale = dpi / sdpi
								local t = source:clone(true)
								local flt = ScaleFilter(
									t:getWidth() * scale,
									t:getHeight() * scale
								)
								t:apply(flt)
								t:save(dpi .. ".png")
							end

							-- Get file size of output.
							local f = FileSystem.getInstance():get(Path(dpi .. ".png"))
							assert (f ~= nil)
							sizes[j] = f:getSize()								
						end

					else

						-- Generate PNG at different DPI resolutions.
						for j, dpi in ipairs(dpis) do

							-- Faux export DPI to export as 16x16 at baseline (if base isn't set).
							local xdpi = (90 / 2) * (dpi / 96) * (base / 16)
							export("Icons.svg", o.column * 32, o.row * 32, o.width * 32, o.height * 32, xdpi, dpi .. ".png")

							-- Get file size of output.
							local f = FileSystem.getInstance():get(Path(dpi .. ".png"))
							assert (f ~= nil)
							sizes[j] = f:getSize()
						end

					end

					-- Merge all files into a simple "image pack" resource.
					local f = FileSystem.getInstance():open(p, File.FmWrite)
					assert (f ~= nil)

					-- Write directory.
					local bw = BitWriter(f)
					bw:writeUInt16(#dpis)
					local offset = 16 / 8 + #dpis * (16 + 32) / 8
					for j, dpi in ipairs(dpis) do
						bw:writeUInt16(dpi)
						bw:writeUInt32(offset)
						offset = offset + sizes[j]
					end

					-- Append each image file.
					for j, dpi in ipairs(dpis) do
						local sf = FileSystem.getInstance():open(Path(dpi .. ".png"), File.FmRead)
						assert (sf ~= nil)
						StreamCopy(f, sf):execute()
						sf:close()
					end

					f:close()

					-- Remove all intermediate images.
					for j, dpi in ipairs(dpis) do
						run:rm(dpi .. ".png")
					end

				else
					stdout:printLn("Skipped as target is read-only; presumably because it's locked in SCM.")
				end
			end
		end
	end
	stdout:printLn("Done")
end
