// THIS FILE IS AUTOGENERATED, DO NOT EDIT!

<!--

function string:split(sep)
	local sep, fields = sep or ":", {}
	local pattern = string.format("([^%s]+)", sep)
	self:gsub(pattern, function(c) fields[#fields+1] = c end)
	return fields
end

function string:startswith(st)
	return self:sub(1, #st) == st
end


function string:endswith(send)
	return #self >= #send and self:find(send, #self - #send + 1, true) and true or false
end

local linkerIncludes = {}

local files = os:getEnvironment("DEPLOY_FILES"):split(" ")
for _, f in ipairs(files) do
	if f:endswith(".a") and f:startswith("libTraktor") then
		table.insert(linkerIncludes, "__module__" .. f:sub(4, #f - 2):gsub("%.", "_"))
	end
end

for _, m in ipairs(linkerIncludes) do
	output:printLn("extern \"C\" void " .. m .. "();")
end

--!>
extern "C" void traktor_main(struct android_app* state);

extern "C" void android_main(struct android_app* state)
{
<!--
for _, m in ipairs(linkerIncludes) do
	output:printLn("\t" .. m .. "();")
end
--!>
	traktor_main(state);
}
