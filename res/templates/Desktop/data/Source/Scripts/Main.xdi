<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="1">
	<dependencies/>
	<text>
	<![CDATA[
import(traktor)


local cameraTransformInitial = Transform()
local cameraPosition = Vector4(0, 0, 0, 1)
local cameraRotation = Vector4(0, 0, 0, 1)


function initialize(params)
	local inputSystem = environment:getInput():getInputSystem()
	local renderView = environment:getRender():getRenderView()

	-- Hide and acquire mouse cursor.
	-- inputSystem:setExclusive(true)
	-- renderView:hideCursor()

	-- Get inital camera position.
	local cameraEntity = world:getEntity("Camera")
	cameraTransformInitial = cameraEntity:getTransform()
	cameraPosition = cameraTransformInitial:translation()
end


function update(info)
	local inputMapping = environment:getInput():getInputMapping()

	-- Read input state values.
	local moveX = inputMapping:getStateValue("STATE_MOVE_X") * 0.5
	local moveZ = inputMapping:getStateValue("STATE_MOVE_Z") * 0.5
	local rotateHead = inputMapping:getStateValue("STATE_ROTATE_HEAD") * 0.0075
	local rotatePitch = inputMapping:getStateValue("STATE_ROTATE_PITCH") * 0.0075

	-- Update camera transform.
	local cameraEntity = world:getEntity("Camera")
	local transform = cameraEntity:getTransform()
	local move = transform * Vector4(moveX, 0, moveZ, 0)
	local rotate = Vector4(rotateHead, rotatePitch, 0)

	cameraPosition = cameraPosition + move
	cameraRotation = cameraRotation + rotate

	cameraEntity:setTransform(Transform(
		cameraPosition,
		Quaternion.fromEulerAngles(cameraRotation:x(), 0, 0) * Quaternion.fromEulerAngles(0, cameraRotation:y(), 0)
	))

	-- Update user interface.
	ui:getRoot():setCameraPosition(cameraPosition:x(), cameraPosition:y(), cameraPosition:z())
end


function extern_reset()
	local cameraEntity = world:getEntity("Camera")
	cameraEntity:setTransform(cameraTransformInitial)
	cameraPosition = cameraTransformInitial:translation()
end


	]]>
	</text>
</object>
