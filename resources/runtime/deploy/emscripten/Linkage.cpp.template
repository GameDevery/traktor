// THIS FILE IS AUTOGENERATED, DO NOT EDIT!

<!--

function string:split(sep)
	local sep, fields = sep or ":", {}
	local pattern = string.format("([^%s]+)", sep)
	self:gsub(pattern, function(c) fields[#fields+1] = c end)
	return fields
end

function string:startswith(st)
	return self:sub(1, #st) == st
end


function string:endswith(send)
	return #self >= #send and self:find(send, #self - #send + 1, true) and true or false
end

local linkerIncludes = {}

local files = os:getEnvironment("DEPLOY_MODULES"):split("\n")
for _, f in ipairs(files) do
	table.insert(linkerIncludes, "__module__" .. f:gsub("%.", "_"))
end

for _, m in ipairs(linkerIncludes) do
	output:printLn("extern \"C\" void " .. m .. "();")
end

--!>
extern "C" void __traktor__emscripten__linkage__()
{
<!--
for _, m in ipairs(linkerIncludes) do
	output:printLn("\t" .. m .. "();")
end
--!>}
