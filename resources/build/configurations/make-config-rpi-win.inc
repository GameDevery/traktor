# Configuration file

# Toolchain and SDK configuration.
TOOLCHAIN_BIN=$(RPI_ROOT)/bin
SYSROOT=$(RPI_ROOT)/arm-linux-gnueabihf/sysroot
INCLUDES=-I$(SYSROOT)/opt/vc/include

# Build tools.
C="$(TOOLCHAIN_BIN)/arm-linux-gnueabihf-gcc"

C_FLAGS_COMMON=\
	-static-libstdc++\
	-pthread\
	-MMD\
	-marm\
	-march=armv7-a\
	-mtune=cortex-a8\
	-mfpu=neon\
	-mfloat-abi=hard\
	-fPIC\
	-D __RPI__\
	$(INCLUDES)

C_FLAGS_DEBUG_SHARED=$(C_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
C_FLAGS_RELEASE_SHARED=$(C_FLAGS_COMMON) -O2 -D _UNICODE -D UNICODE -D NDEBUG
C_FLAGS_DEBUG_STATIC=$(C_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
C_FLAGS_RELEASE_STATIC=$(C_FLAGS_COMMON) -O2 -D _UNICODE -D UNICODE -D NDEBUG
C_FLAGS_DEBUG_EXECUTABLE=$(C_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
C_FLAGS_RELEASE_EXECUTABLE=$(C_FLAGS_COMMON) -O2 -D _UNICODE -D UNICODE -D NDEBUG
C_FLAG_OUTPUT=-o 

CC="$(TOOLCHAIN_BIN)/arm-linux-gnueabihf-gcc"

CC_FLAGS_COMMON=\
	-static-libstdc++\
	-std=c++11\
	-pthread\
	-MMD\
	-marm\
	-march=armv7-a\
	-mtune=cortex-a8\
	-mfpu=neon\
	-mfloat-abi=hard\
	-fPIC\
	-x c++\
	-D __RPI__\
	$(INCLUDES)

CC_FLAGS_DEBUG_SHARED=$(CC_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
CC_FLAGS_RELEASE_SHARED=$(CC_FLAGS_COMMON) -O2 -D _UNICODE -D UNICODE -D NDEBUG
CC_FLAGS_DEBUG_STATIC=$(CC_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
CC_FLAGS_RELEASE_STATIC=$(CC_FLAGS_COMMON) -O2 -D _UNICODE -D UNICODE -D NDEBUG
CC_FLAGS_DEBUG_EXECUTABLE=$(CC_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
CC_FLAGS_RELEASE_EXECUTABLE=$(CC_FLAGS_COMMON) -O2 -D _UNICODE -D UNICODE -D NDEBUG
CC_FLAG_OUTPUT=-o

AR="$(TOOLCHAIN_BIN)/arm-linux-gnueabihf-ar"
AR_FLAGS_COMMON=-r -s
AR_FLAGS_DEBUG_STATIC=$(AR_FLAGS_COMMON)
AR_FLAGS_RELEASE_STATIC=$(AR_FLAGS_COMMON)
AR_FLAG_OUTPUT=

LINK="$(TOOLCHAIN_BIN)/arm-linux-gnueabihf-gcc"
LINK_LIBS=-lgcc -shared
LINK_FLAGS_DEBUG_EXECUTABLE=$(LINK_LIBS)
LINK_FLAGS_RELEASE_EXECUTABLE=$(LINK_LIBS)
LINK_FLAG_OUTPUT=-o

ADDITIONAL_INCLUDE_PATHS=
ADDITIONAL_LIBRARY_PATHS=

BINARY_INCLUDE=$(TRAKTOR_HOME)\bin\win64\releasestatic\Traktor.Run.App $(TRAKTOR_HOME)\scripts\binaryinclude\BinaryInclude.run
