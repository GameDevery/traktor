# Configuration file

# Toolchain and SDK configuration.
XCODE_PATH=$(shell xcode-select --print-path)
TOOLCHAIN_BIN=$(XCODE_PATH)/Toolchains/XcodeDefault.xctoolchain/usr/bin
SDK_SYSROOT=$(XCODE_PATH)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
ARCH=x86_64
MAC_OS_MIN_VERSION=10.15

# Build tools.
C=$(TOOLCHAIN_BIN)/clang
C_FLAGS_COMMON=-arch $(ARCH) -stdlib=libc++ -mmacosx-version-min=$(MAC_OS_MIN_VERSION) -D__MAC__ -fno-strict-aliasing -fno-common -isysroot $(SDK_SYSROOT)
C_FLAGS_DEBUG_SHARED=$(C_FLAGS_COMMON) -g -D _UNICODE -D UNICODE -fPIC
C_FLAGS_RELEASE_SHARED=$(C_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE -fPIC
C_FLAGS_DEBUG_STATIC=$(C_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
C_FLAGS_RELEASE_STATIC=$(C_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE
C_FLAGS_DEBUG_EXECUTABLE=$(C_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
C_FLAGS_RELEASE_EXECUTABLE=$(C_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE
C_FLAG_OUTPUT=-o 

CC=$(TOOLCHAIN_BIN)/clang++
CC_FLAGS_COMMON=-arch $(ARCH) -std=c++17 -stdlib=libc++ -mmacosx-version-min=$(MAC_OS_MIN_VERSION) -D__MAC__ -fno-strict-aliasing -fno-common -isysroot $(SDK_SYSROOT)
CC_FLAGS_DEBUG_SHARED=$(CC_FLAGS_COMMON) -g -D _UNICODE -D UNICODE -fPIC
CC_FLAGS_RELEASE_SHARED=$(CC_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE -fPIC
CC_FLAGS_DEBUG_STATIC=$(CC_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
CC_FLAGS_RELEASE_STATIC=$(CC_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE
CC_FLAGS_DEBUG_EXECUTABLE=$(CC_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
CC_FLAGS_RELEASE_EXECUTABLE=$(CC_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE
CC_FLAG_OUTPUT=-o 

MM=$(TOOLCHAIN_BIN)/clang++
MM_FLAGS_COMMON=-arch $(ARCH) -std=c++17 -stdlib=libc++ -mmacosx-version-min=$(MAC_OS_MIN_VERSION) -D__MAC__ -fobjc-arc -fno-strict-aliasing -fno-common -Wall -Wundef -Wno-ctor-dtor-privacy -isysroot $(SDK_SYSROOT)
MM_FLAGS_DEBUG_SHARED=$(MM_FLAGS_COMMON) -g -D _UNICODE -D UNICODE -fPIC
MM_FLAGS_RELEASE_SHARED=$(MM_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE -fPIC
MM_FLAGS_DEBUG_STATIC=$(MM_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
MM_FLAGS_RELEASE_STATIC=$(MM_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE
MM_FLAGS_DEBUG_EXECUTABLE=$(MM_FLAGS_COMMON) -g -D _UNICODE -D UNICODE
MM_FLAGS_RELEASE_EXECUTABLE=$(MM_FLAGS_COMMON) -O3 -D _UNICODE -D UNICODE
MM_FLAG_OUTPUT=-o 

AR=$(TOOLCHAIN_BIN)/libtool
AR_FLAGS_COMMON=-static -syslibroot $(SDK_SYSROOT)
AR_FLAGS_DEBUG_STATIC=$(AR_FLAGS_COMMON)
AR_FLAGS_RELEASE_STATIC=$(AR_FLAGS_COMMON)
AR_FLAG_OUTPUT=-o 

LINK=$(TOOLCHAIN_BIN)/clang++ $(CC_FLAGS_COMMON) -rpath @executable_path/.
LINK_FLAG_OUTPUT=-o 
LINK_LIBS=

BINARY_INCLUDE=$(TRAKTOR_HOME)/bin/osx/releasestatic/Traktor.Run.App $(TRAKTOR_HOME)/scripts/binaryinclude/BinaryInclude.run
COPY_AND_SIGN=$(TRAKTOR_HOME)/bin/osx/releasestatic/Traktor.Run.App $(TRAKTOR_HOME)/resources/build/osx/CopyAndSign.run