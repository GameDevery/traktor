<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="1">
	<dependencies/>
	<text>
	<![CDATA[
local _camera
local _cameraHead
local _cameraPitch
local _cameraPosition
local _mode

-- Initialize layer
function initialize()
	_cameraHead = 0
	_cameraPitch = 0
	_cameraPosition = Vector4(0, 0, 0, 1)
	_mode = 0
end

-- Update layer
function update(control, info)
	local inputMapping = environment:getInput():getInputMapping()
	local dT = info:getSimulationDeltaTime()

	-- First check if user wants to terminate.
	if inputMapping:isStatePressed("STATE_TERMINATE") then
		stage:terminate()
	end

	-- Update state.
	if _mode == 0 then
		-- Animation mode
		if inputMapping:isStatePressed("STATE_TOGGLE_MODE") then
			_mode = 1
			world:setControllerEnable(false)
			print("Enter free look mode")
		end
	else
		-- Free look mode
		if inputMapping:isStatePressed("STATE_TOGGLE_MODE") then
			_mode = 0
			world:setControllerEnable(true)
			print("Enter animation mode")
		else
			local lookHead = inputMapping:getStateValue("STATE_LOOK_HEAD")
			local lookPitch = inputMapping:getStateValue("STATE_LOOK_PITCH")
			local moveX = inputMapping:getStateValue("STATE_MOVE_X")
			local moveZ = inputMapping:getStateValue("STATE_MOVE_Z")
			local moveSpeed = 16 * dT -- inputMapping:getStateValue("STATE_MOVE_SPEED")

			_cameraHead = _cameraHead + lookHead * 4 * dT
			_cameraPitch = _cameraPitch + lookPitch * 4 * dT
			local orientation = Quaternion(_cameraHead, _cameraPitch, 0)
			
			local motion = Vector4(moveX * moveSpeed, 0, moveZ * moveSpeed, 0)
			motion = orientation:transform(motion)

			_cameraPosition = _cameraPosition:add(motion)

			_camera = world:getEntity("Camera")
			_camera:setTransform(Transform(
				_cameraPosition:xyz1(),
				orientation
			))
		end
	end
end

	]]>
	</text>
</object>
