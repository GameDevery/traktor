<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.render.ShaderGraph">
	<nodes>
		<item type="traktor.render.PixelOutput" version="7">
			<comment/>
			<position>
				<first>6961</first>
				<second>-636</second>
			</position>
			<technique>Default</technique>
			<priority>
				<setup>false</setup>
				<opaque>false</opaque>
				<postOpaque>false</postOpaque>
				<alphaBlend>false</alphaBlend>
				<postAlphaBlend>false</postAlphaBlend>
				<overlay>false</overlay>
			</priority>
			<cullMode>CmNever</cullMode>
			<blendEnable>false</blendEnable>
			<blendColorOperation>BoAdd</blendColorOperation>
			<blendColorSource>BfSourceAlpha</blendColorSource>
			<blendColorDestination>BfOneMinusSourceAlpha</blendColorDestination>
			<blendAlphaOperation>BoAdd</blendAlphaOperation>
			<blendAlphaSource>BfOne</blendAlphaSource>
			<blendAlphaDestination>BfOne</blendAlphaDestination>
			<colorWriteMask>
				<red>true</red>
				<green>true</green>
				<blue>true</blue>
				<alpha>false</alpha>
			</colorWriteMask>
			<depthEnable>false</depthEnable>
			<depthWriteEnable>false</depthWriteEnable>
			<depthFunction>CfAlways</depthFunction>
			<alphaTestEnable>false</alphaTestEnable>
			<alphaTestFunction>CfLess</alphaTestFunction>
			<alphaTestReference>128</alphaTestReference>
			<alphaToCoverageEnable>false</alphaToCoverageEnable>
			<wireframe>false</wireframe>
			<stencilEnable>false</stencilEnable>
			<stencilFail>SoKeep</stencilFail>
			<stencilZFail>SoKeep</stencilZFail>
			<stencilPass>SoKeep</stencilPass>
			<stencilFunction>CfAlways</stencilFunction>
			<stencilReference>0</stencilReference>
			<stencilMask>2147483648</stencilMask>
			<registerCount>0</registerCount>
			<precisionHint>PhHigh</precisionHint>
		</item>
		<item type="traktor.render.External" version="1">
			<comment/>
			<position>
				<first>-506</first>
				<second>105</second>
			</position>
			<fragmentGuid>{6DE0FC81-3E61-0D45-81F4-8FB4B950B941}</fragmentGuid>
			<inputPins/>
			<outputPins>
				<item>
					<name>Position</name>
				</item>
				<item>
					<name>TexCoord</name>
				</item>
			</outputPins>
			<values/>
		</item>
		<item type="traktor.render.Script">
			<comment/>
			<position>
				<first>4310</first>
				<second>-319</second>
			</position>
			<name>RayCastFn_DX11</name>
			<inputPins>
				<item>
					<name>ColorMap</name>
					<type>PtTexture2D</type>
					<samplerId/>
				</item>
				<item>
					<name>DepthMap</name>
					<type>PtTexture2D</type>
					<samplerId/>
				</item>
				<item>
					<name>FragmentPosition</name>
					<type>PtVector</type>
					<samplerId/>
				</item>
				<item>
					<name>TargetSize</name>
					<type>PtVector</type>
					<samplerId/>
				</item>
				<item>
					<name>Projection</name>
					<type>PtMatrix</type>
					<samplerId/>
				</item>
				<item>
					<name>Origin</name>
					<type>PtVector</type>
					<samplerId/>
				</item>
				<item>
					<name>Direction</name>
					<type>PtVector</type>
					<samplerId/>
				</item>
				<item>
					<name>Reflectivity</name>
					<type>PtScalar</type>
					<samplerId/>
				</item>
			</inputPins>
			<outputPins>
				<item>
					<name>Color</name>
					<type>PtVector</type>
				</item>
				<item>
					<name>Hit</name>
					<type>PtScalar</type>
				</item>
			</outputPins>
			<samplers>
				<item>
					<first>ColorMap_Sampler</first>
					<second>
						<minFilter>FtLinear</minFilter>
						<mipFilter>FtLinear</mipFilter>
						<magFilter>FtLinear</magFilter>
						<addressU>AdClamp</addressU>
						<addressV>AdClamp</addressV>
						<addressW>AdClamp</addressW>
						<compare>CfNone</compare>
						<mipBias>0</mipBias>
						<ignoreMips>false</ignoreMips>
						<useAnisotropic>false</useAnisotropic>
					</second>
				</item>
				<item>
					<first>DepthMap_Sampler</first>
					<second>
						<minFilter>FtPoint</minFilter>
						<mipFilter>FtPoint</mipFilter>
						<magFilter>FtPoint</magFilter>
						<addressU>AdClamp</addressU>
						<addressV>AdClamp</addressV>
						<addressW>AdClamp</addressW>
						<compare>CfNone</compare>
						<mipBias>0</mipBias>
						<ignoreMips>true</ignoreMips>
						<useAnisotropic>false</useAnisotropic>
					</second>
				</item>
				<item>
					<first>ReflectionMap_Sampler</first>
					<second>
						<minFilter>FtLinear</minFilter>
						<mipFilter>FtLinear</mipFilter>
						<magFilter>FtLinear</magFilter>
						<addressU>AdClamp</addressU>
						<addressV>AdClamp</addressV>
						<addressW>AdClamp</addressW>
						<compare>CfNone</compare>
						<mipBias>0</mipBias>
						<ignoreMips>false</ignoreMips>
						<useAnisotropic>false</useAnisotropic>
					</second>
				</item>
			</samplers>
			<script>
			<![CDATA[
//----------------------
// Screenspace ray cast
//----------------------

#define T_MAX_STEPS 64
#define T_MAX_DISTANCE 4.0f
#define T_STEP 4.0f

bool intersectDepth(texture2D depthMap, float2 position, float z)
{
	float depth = depthMap.Load(float3(position, 0.0f)).x;
	float dz = abs(z - depth - 0.2f);
	return (dz < 0.3f);
}

ENTRY
{
	Color = float4(0.0f, 0.0f, 0.0f, 0.0f);
	Hit = 0.0f;

	if (Direction.z <= 0.0f)
		return;

	float4 viewStart = float4(Origin.xyz, 1.0f);
	float4 viewEnd = float4((Origin + Direction * T_MAX_DISTANCE).xyz, 1.0f);
	
	float4 clipStart = mul(Projection, viewStart);
	float4 clipEnd = mul(Projection, viewEnd);

	float2 screenStart = clipStart.xy / clipStart.w;
	screenStart = screenStart * float2(0.5f, -0.5f) + float2(0.5f, 0.5f);
	screenStart *= TargetSize;

	float2 screenEnd = clipEnd.xy / clipEnd.w;
	screenEnd = screenEnd * float2(0.5f, -0.5f) + float2(0.5f, 0.5f);
	screenEnd *= TargetSize;

	float viewZDelta = viewEnd.z - viewStart.z;
	float2 screenDelta = screenEnd - screenStart;

	float ln = length(screenDelta) / T_STEP;

	float viewZStep = viewZDelta / ln;
	float2 screenStep = screenDelta / ln;

	float viewZ = viewStart.z;
	float2 screenPosition = screenStart;

	viewZ += viewZStep;
	screenPosition += screenStep;

	for (int i = 0; i < T_MAX_STEPS; ++i)
	{
		if (intersectDepth(DepthMap, screenPosition, viewZ))
		{
			Hit = 1.0f - saturate(float(i - T_MAX_STEPS / 2) / (T_MAX_STEPS / 2 - 1));
			break;
		}

		viewZ += viewZStep;
		screenPosition += screenStep;
	}

	if (
		screenPosition.x < 0.0f || screenPosition.y < 0.0f ||
		screenPosition.x >= TargetSize.x || screenPosition.y >= TargetSize.y
	)
	{
		Hit = 0.0f;
		return;
	}

	Color = ColorMap.Load(float3(screenPosition, 0.0f));
}

			]]>
			</script>
		</item>
		<item type="traktor.render.External" version="1">
			<comment/>
			<position>
				<first>43</first>
				<second>21</second>
			</position>
			<fragmentGuid>{B8A2B203-34E6-3543-8502-522D0F16791C}</fragmentGuid>
			<inputPins>
				<item>
					<name>UV</name>
					<optional>false</optional>
				</item>
			</inputPins>
			<outputPins>
				<item>
					<name>Output</name>
				</item>
			</outputPins>
			<values/>
		</item>
		<item type="traktor.render.Normalize">
			<comment/>
			<position>
				<first>3003</first>
				<second>-702</second>
			</position>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>2266</first>
				<second>-309</second>
			</position>
			<swizzle>xyz</swizzle>
		</item>
		<item type="traktor.render.Add">
			<comment/>
			<position>
				<first>1937</first>
				<second>-353</second>
			</position>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>1804</first>
				<second>-319</second>
			</position>
			<swizzle>00x</swizzle>
		</item>
		<item type="traktor.render.External" version="1">
			<comment/>
			<position>
				<first>61</first>
				<second>-120</second>
			</position>
			<fragmentGuid>{ED628E05-EA7F-B24F-9E38-97F53A90CCDA}</fragmentGuid>
			<inputPins>
				<item>
					<name>UV</name>
					<optional>false</optional>
				</item>
			</inputPins>
			<outputPins>
				<item>
					<name>Output</name>
				</item>
			</outputPins>
			<values/>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>1804</first>
				<second>-259</second>
			</position>
			<swizzle>xy0</swizzle>
		</item>
		<item type="traktor.render.Mul">
			<comment/>
			<position>
				<first>1488</first>
				<second>-269</second>
			</position>
		</item>
		<item type="traktor.render.Mul">
			<comment/>
			<position>
				<first>1120</first>
				<second>-204</second>
			</position>
		</item>
		<item type="traktor.render.Uniform" version="1">
			<comment/>
			<position>
				<first>351</first>
				<second>-365</second>
			</position>
			<parameterName>World_MagicCoeffs</parameterName>
			<type>PtVector</type>
			<frequency>UfFrame</frequency>
		</item>
		<item type="traktor.render.Uniform" version="1">
			<comment/>
			<position>
				<first>3337</first>
				<second>-475</second>
			</position>
			<parameterName>World_DepthMap</parameterName>
			<type>PtTexture2D</type>
			<frequency>UfDraw</frequency>
		</item>
		<item type="traktor.render.Uniform" version="1">
			<comment/>
			<position>
				<first>3346</first>
				<second>-311</second>
			</position>
			<parameterName>World_Projection</parameterName>
			<type>PtMatrix</type>
			<frequency>UfOnce</frequency>
		</item>
		<item type="traktor.render.External" version="1">
			<comment/>
			<position>
				<first>4</first>
				<second>254</second>
			</position>
			<fragmentGuid>{A8211EA4-C613-F54D-A5F2-AFB12E0BBE04}</fragmentGuid>
			<inputPins>
				<item>
					<name>UV</name>
					<optional>false</optional>
				</item>
			</inputPins>
			<outputPins>
				<item>
					<name>Output</name>
				</item>
			</outputPins>
			<values/>
		</item>
		<item type="traktor.render.Branch">
			<comment/>
			<position>
				<first>6004</first>
				<second>-505</second>
			</position>
			<parameterName>World_TraceReflections</parameterName>
		</item>
		<item type="traktor.render.Uniform" version="1">
			<comment/>
			<position>
				<first>2844</first>
				<second>-1347</second>
			</position>
			<parameterName>World_ScreenMap</parameterName>
			<type>PtTexture2D</type>
			<frequency>UfFrame</frequency>
		</item>
		<item type="traktor.render.Sampler" version="5">
			<comment/>
			<position>
				<first>3401</first>
				<second>-1258</second>
			</position>
			<minFilter>FtLinear</minFilter>
			<mipFilter>FtLinear</mipFilter>
			<magFilter>FtLinear</magFilter>
			<addressU>AdWrap</addressU>
			<addressV>AdWrap</addressV>
			<addressW>AdWrap</addressW>
			<compare>CfNone</compare>
			<mipBias>0</mipBias>
			<ignoreMips>false</ignoreMips>
			<useAnisotropic>false</useAnisotropic>
		</item>
		<item type="traktor.render.External" version="1">
			<comment/>
			<position>
				<first>4328</first>
				<second>-702</second>
			</position>
			<fragmentGuid>{5961D8B7-FFC0-8742-B87F-1AD8B232D84E}</fragmentGuid>
			<inputPins>
				<item>
					<name>EyeDirection</name>
					<optional>false</optional>
				</item>
				<item>
					<name>Input</name>
					<optional>false</optional>
				</item>
				<item>
					<name>Normal</name>
					<optional>false</optional>
				</item>
				<item>
					<name>Amount</name>
					<optional>true</optional>
				</item>
				<item>
					<name>Offset</name>
					<optional>true</optional>
				</item>
				<item>
					<name>ReflectionMap</name>
					<optional>true</optional>
				</item>
				<item>
					<name>Scale</name>
					<optional>true</optional>
				</item>
			</inputPins>
			<outputPins>
				<item>
					<name>Output</name>
				</item>
			</outputPins>
			<values>
				<item>
					<first>Amount</first>
					<second>1</second>
				</item>
				<item>
					<first>Offset</first>
					<second>0</second>
				</item>
				<item>
					<first>ReflectionMap</first>
					<second>0</second>
				</item>
				<item>
					<first>Scale</first>
					<second>1</second>
				</item>
			</values>
		</item>
		<item type="traktor.render.Scalar">
			<comment/>
			<position>
				<first>4096</first>
				<second>-538</second>
			</position>
			<value>1</value>
		</item>
		<item type="traktor.render.Lerp">
			<comment/>
			<position>
				<first>5596</first>
				<second>-359</second>
			</position>
		</item>
		<item type="traktor.render.Scalar">
			<comment/>
			<position>
				<first>3960</first>
				<second>128</second>
			</position>
			<value>1</value>
		</item>
		<item type="traktor.render.Lerp">
			<comment/>
			<position>
				<first>6563</first>
				<second>-596</second>
			</position>
		</item>
		<item type="traktor.render.Color">
			<comment/>
			<position>
				<first>4012</first>
				<second>-618</second>
			</position>
			<color>0, 0, 0, 0</color>
		</item>
		<item type="traktor.render.TargetSize">
			<comment/>
			<position>
				<first>3762</first>
				<second>-83</second>
			</position>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>4085</first>
				<second>-106</second>
			</position>
			<swizzle>xy00</swizzle>
		</item>
		<item type="traktor.render.FragmentPosition">
			<comment/>
			<position>
				<first>3724</first>
				<second>-164</second>
			</position>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>4089</first>
				<second>-176</second>
			</position>
			<swizzle>xy00</swizzle>
		</item>
		<item type="traktor.render.Script">
			<comment/>
			<position>
				<first>3330</first>
				<second>-46</second>
			</position>
			<name>ReflectionRay_DX11</name>
			<inputPins>
				<item>
					<name>ViewPosition</name>
					<type>PtVector</type>
					<samplerId/>
				</item>
				<item>
					<name>ViewNormal</name>
					<type>PtVector</type>
					<samplerId/>
				</item>
			</inputPins>
			<outputPins>
				<item>
					<name>RayOrigin</name>
					<type>PtVector</type>
				</item>
				<item>
					<name>RayDirection</name>
					<type>PtVector</type>
				</item>
			</outputPins>
			<samplers/>
			<script>
			<![CDATA[
ENTRY
{
	float3 positionVS = ViewPosition.xyz + ViewNormal.xyz * 0.125f;

	float3 toPositionVS = normalize(positionVS);
	float3 rayDirectionVS = normalize(reflect(toPositionVS, ViewNormal.xyz));

	RayOrigin = float4(positionVS, 0.0f);
	RayDirection = float4(rayDirectionVS, 0.0f);
}
			]]>
			</script>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>3145</first>
				<second>-19</second>
			</position>
			<swizzle>xyz0</swizzle>
		</item>
		<item type="traktor.render.Swizzle">
			<comment/>
			<position>
				<first>3156</first>
				<second>50</second>
			</position>
			<swizzle>xyz0</swizzle>
		</item>
	</nodes>
	<edges>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[1]"/>
				<name>TexCoord</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[3]"/>
				<name>UV</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[6]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[5]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[7]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[6]"/>
				<name>Input1</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[8]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[7]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[1]"/>
				<name>TexCoord</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[8]"/>
				<name>UV</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[9]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[6]"/>
				<name>Input2</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[10]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[9]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[1]"/>
				<name>Position</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[10]"/>
				<name>Input1</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[11]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[10]"/>
				<name>Input2</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[8]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[11]"/>
				<name>Input1</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[12]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[11]"/>
				<name>Input2</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[1]"/>
				<name>TexCoord</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[15]"/>
				<name>UV</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[17]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[18]"/>
				<name>Texture</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[1]"/>
				<name>TexCoord</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[18]"/>
				<name>TexCoord</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[14]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>Projection</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[13]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>DepthMap</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[20]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[19]"/>
				<name>Amount</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[3]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[19]"/>
				<name>Normal</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[19]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[21]"/>
				<name>Input1</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[21]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[16]"/>
				<name>True</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[4]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[19]"/>
				<name>EyeDirection</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[17]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>ColorMap</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[22]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>Reflectivity</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[16]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[23]"/>
				<name>Input2</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[19]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[16]"/>
				<name>False</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[18]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[23]"/>
				<name>Input1</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[15]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[23]"/>
				<name>Blend</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[24]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[19]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[25]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[26]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[26]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>TargetSize</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[27]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[28]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[28]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>FragmentPosition</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[5]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[4]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[29]"/>
				<name>RayOrigin</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>Origin</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[29]"/>
				<name>RayDirection</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[2]"/>
				<name>Direction</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[2]"/>
				<name>Color</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[21]"/>
				<name>Input2</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[2]"/>
				<name>Hit</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[21]"/>
				<name>Blend</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[3]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[31]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[31]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[29]"/>
				<name>ViewNormal</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[30]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[29]"/>
				<name>ViewPosition</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[5]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item[30]"/>
				<name>Input</name>
			</destination>
		</item>
		<item type="traktor.render.Edge">
			<source>
				<node ref="/object/nodes/item[23]"/>
				<name>Output</name>
			</source>
			<destination>
				<node ref="/object/nodes/item"/>
				<name>Input</name>
			</destination>
		</item>
	</edges>
</object>
