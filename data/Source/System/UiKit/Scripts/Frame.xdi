<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{7947759C-88DB-794E-8D09-7F30A40B6669}
#using \{26FCC8EA-F349-5545-93B5-6ABDAE065E6F}

-- Frame

Frame = Frame or inherit(Container)
Frame_meta = Frame_meta or { name = "Frame", __index = Frame }

function Frame.new(root_mc, vwidth, vheight, layout)
	local o = {}
	setmetatable(o, Frame_meta)

	local depth = root_mc:getNextHighestDepth()
	local mc = root_mc:createEmptyMovieClip("mc", depth)

	o:_initialize(mc, vwidth, vheight, layout)
	return o
end

function Frame:remove()
	self._inner_mc:setMember("onEnterFrame", nil)
	self._inner_mc:setMember("onMouseDown", nil)
	self._inner_mc:setMember("onMouseUp", nil)
	self._inner_mc:setMember("onMouseMove", nil)
	Widget.remove(self)
end

function Frame:getPreferredSize()
	return { width = 0, height = 0 }
end

function Frame:update()
	local cx = self._mc:getContext()
	local stage = cx:getGlobal():getMember("Stage")

	local width = stage:getProperty("width")
	local height = stage:getProperty("height")
	assert (width > 0)
	assert (height > 0)

	local xscale = width / self._vwidth
	local yscale = height / self._vheight
	local scale = math.min(xscale, yscale)

	self._inner_mc:setXScale(scale * 100)
	self._inner_mc:setYScale(scale * 100)

	self:place(0, 0, width / scale, height / scale)
end

-- Private

function Frame:_initialize(mc, vwidth, vheight, layout)
	Container._initialize(self, nil, mc, layout)

	local depth = mc:getNextHighestDepth()

	-- Disable stage scale and position, register listener of changes in stage size.
	local cx = mc:getContext()
	local stage = cx:getGlobal():getMember("Stage")
	local listener = cx:createObject()
	listener:setMember("onResize", function() self:update() end)
	stage:addListener(listener)
	stage:setProperty("scaleMode", "noScale")
	stage:setProperty("align", "TL")

	self._vwidth = vwidth
	self._vheight = vheight

	self._inner_mc = mc:createEmptyMovieClip("inner_mc", depth)
	self._getInnerClip = function() return self._inner_mc end

	-- Setup event source listeners.
	self._inner_mc:setMember("onEnterFrame", function() self:_eventEnterFrame() end)
	self._inner_mc:setMember("onMouseDown", function() self:_eventMouseDown() end)
	self._inner_mc:setMember("onMouseUp", function() self:_eventMouseUp() end)
	self._inner_mc:setMember("onMouseMove", function() self:_eventMouseMove() end)
end

function Frame:_eventEnterFrame()
	self:_dispatchEvent(FrameEvent.new())
end

function Frame:_eventMouseDown()
	local x = self._inner_mc:getMouseX()
	local y = self._inner_mc:getMouseY()
	self:_dispatchEvent(MouseDownEvent.new(x, y))
end

function Frame:_eventMouseUp()
	local x = self._inner_mc:getMouseX()
	local y = self._inner_mc:getMouseY()
	self:_dispatchEvent(MouseUpEvent.new(x, y))
end

function Frame:_eventMouseMove()
	local x = self._inner_mc:getMouseX()
	local y = self._inner_mc:getMouseY()
	self:_dispatchEvent(MouseMoveEvent.new(x, y))
end

	]]>
	</text>
</object>
