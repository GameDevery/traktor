<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

import(traktor.flash)

-- CheckBox

CheckBox = CheckBox or class("CheckBox", Widget)

function CheckBox:new(parent)
	local mc = Widget._createResource(parent, "MC_CheckBox")
	self:_initialize(parent, mc)
end

function CheckBox:getPreferredSize()
	return self._preferredSize
end

function CheckBox:setColor(color)
	self._background_mc:setColorTransform(ColorTransform(
		color,
		Color4f(0, 0, 0, 0)
	))
	return self
end

function CheckBox:setChecked(checked)
	if checked ~= self._checked then
		if checked then
			self._background_mc:gotoAndStop("on")
		else
			self._background_mc:gotoAndStop("off")
		end
		self._checked = checked
	end
end

function CheckBox:isChecked()
	return self._checked
end

function CheckBox:setOnClick(fn)
	self._clickFn = fn
end

-- Private

function CheckBox:_initialize(parent, mc, caption)
	Widget._initialize(self, parent, mc)

	self._background_mc = mc:getMember("background_mc")
	self._background_mc:gotoAndStop("off")

	self._preferredSize =
	{
		width = mc:getWidth(),
		height = mc:getHeight()
	}
	self._checked = false
	self._clickFn = nil

	self:addEventListener(MousePressEvent, self, self._onMousePress)
	self:addEventListener(MouseReleaseEvent, self, self._onMouseRelease)
end

function CheckBox:_onMousePress(event)
	self:setChecked(not self._checked)
	return true
end

function CheckBox:_onMouseRelease(event)
	if event.inside then
		if self._clickFn ~= nil then
			self._clickFn(self)
		end
	end
	return true
end

	]]>
	</text>
</object>
