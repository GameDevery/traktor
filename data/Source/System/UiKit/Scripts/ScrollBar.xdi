<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

import(traktor.flash)

-- ScrollBar

ScrollBar = ScrollBar or inherit(Widget)
ScrollBar_meta = ScrollBar_meta or { name = "ScrollBar", __index = ScrollBar }

function ScrollBar.new(parent)
	local o = {}
	setmetatable(o, ScrollBar_meta)

	local mc = Widget._createResource(parent, "MC_ScrollBar")

	o:_initialize(parent, mc)
	return o
end

function ScrollBar:getPreferredSize()
	return self._preferredSize
end

function ScrollBar:place(x, y, width, height)
	self._background_mc:setWidth(width)
	Widget.place(self, x, y, width, height)
end

function ScrollBar:setColor(color)
	self._background_mc:setColorTransform(ColorTransform(
		color,
		Color4f(0, 0, 0, 0)
	))
	return self
end

function ScrollBar:setKnobColor(color)
	self._knob_mc:setColorTransform(ColorTransform(
		color,
		Color4f(0, 0, 0, 0)
	))
	return self
end

-- Private

function ScrollBar:_initialize(parent, mc)
	Widget._initialize(self, parent, mc)

	self._preferredSize =
	{
		width = mc:getWidth(),
		height = mc:getHeight()
	}

	self._background_mc = mc:getMember("background_mc")
	self._knob_mc = mc:getMember("knob_mc")

	self:_registerEvent("onPress", function() self:_onPress() end)
	self:_registerEvent("onMouseUp", function() self:_onMouseUp() end)
	self:_registerEvent("onMouseMove", function() self:_onMouseMove() end)
end

function ScrollBar:_onPress()
	self._trackOffset = self._mc:getMouseX() - self._knob_mc:getX()
	self._track = (self._trackOffset >= 0 and self._trackOffset < self._knob_mc:getWidth())
end

function ScrollBar:_onMouseUp()
	self._track = false
end

function ScrollBar:_onMouseMove()
	if self._track then
		local x = self._mc:getMouseX() - self._trackOffset

		-- Clamp range.
		local mx = self._background_mc:getWidth() - self._knob_mc:getWidth()
		if x < 0 then
			x = 0
		elseif x > mx then
			x = mx
		end

		self._knob_mc:setX(x)
	end
end

	]]>
	</text>
</object>
