<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

-- ProgressBar

ProgressBar = ProgressBar or class("ProgressBar", Widget)

ProgressBar:setStyle("resource", "MC_ProgressBar")
ProgressBar:setStyle("background", traktor.Color4f(0.0, 0.0, 0.0, 1.0))
ProgressBar:setStyle("foreground", traktor.Color4f(1.0, 1.0, 1.0, 1.0))

function ProgressBar:new(parent, reverse, skin)
	local mc = Widget._createResource(parent, skin or self:getStyle().resource)
	self:_initialize(parent, mc, reverse)
end

function ProgressBar:getPreferredSize()
	return self._preferredSize
end

function ProgressBar:place(x, y, width, height)
	Widget.place(self, x, y, width, height)

	local p = self:getPlacement()
	self._back_mc.width = p.width
	self._back_mc.height = p.height
	self._front_mc.width = p.width
	self._front_mc.height = p.height

	self:setValue(self._value)
end

function ProgressBar:setBackColor(color)
	self._back_mc.colorTransform = traktor.spark.ColorTransform(
		color,
		traktor.Color4f(0, 0, 0, 0)
	)
	return self
end

function ProgressBar:setFrontColor(color)
	self._front_mc.colorTransform = traktor.spark.ColorTransform(
		color,
		traktor.Color4f(0, 0, 0, 0)
	)
	return self
end

function ProgressBar:setValue(value)
	self._value = math.max(math.min(value, 1), 0)
	local w = self._back_mc.width
	self._mask_mc.width = w * value
	if self._reverse then
		self._mask_mc.X = w * (1 - value)
	end
	return self
end

function ProgressBar:getValue()
	return self._value
end

-- Private

function ProgressBar:_initialize(parent, mc, reverse)
	Widget._initialize(self, parent, mc)

	self._preferredSize =
	{
		width = mc.width,
		height = mc.height
	}

	self._back_mc = mc:getMember("back_mc")
	self._front_mc = mc:getMember("front_mc")
	self._mask_mc = mc:getMember("mask_mc")
	self._reverse = reverse or false

#if defined(_EDITOR)
	self._back_mc.wireOutline = true
#endif

	self:_loadStyle()
	self:setValue(0)
end

function ProgressBar:_loadStyle()
	local style = self:getStyle()
	self:setBackColor(style.background)
	self:setFrontColor(style.foreground)
end

	]]>
	</text>
</object>
