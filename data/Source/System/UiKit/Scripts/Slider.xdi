<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

import(traktor.flash)

-- Slider

Slider = Slider or inherit(Widget)
Slider_meta = Slider_meta or { name = "Slider", __index = Slider }

function Slider.new(parent)
	local o = {}
	setmetatable(o, Slider_meta)

	local mc = Widget._createResource(parent, "MC_Slider")

	o:_initialize(parent, mc)
	return o
end

function Slider:getPreferredSize()
	return self._preferredSize
end

function Slider:place(x, y, width, height)
	Widget.place(self, x, y, width, height)

	local p = self:getPlacement()
	self._background_mc:setWidth(p.width)
end

function Slider:setColor(color)
	self._background_mc:setColorTransform(ColorTransform(
		color,
		Color4f(0, 0, 0, 0)
	))
	return self
end

function Slider:setKnobColor(color)
	self._knob_mc:setColorTransform(ColorTransform(
		color,
		Color4f(0, 0, 0, 0)
	))
	return self
end

function Slider:setRange(min, max)
	self._range = { min = min, max = max }
	return self
end

function Slider:setPosition(position)
	local w = self._background_mc:getWidth() - self._knob_mc:getWidth()
	local f = (position - self._range.min) / (self._range.max - self._range.min)
	self._knob_mc:setX(w * f)
	return self
end

function Slider:getPosition()
	local w = self._background_mc:getWidth() - self._knob_mc:getWidth()
	local x = self._knob_mc:getX()
	return self._range.min + (self._range.max - self._range.min) * x / w
end

function Slider:setOnScroll(scrollFn)
	self._scrollFn = scrollFn
	return self
end

-- Private

function Slider:_initialize(parent, mc)
	Widget._initialize(self, parent, mc)

	self._preferredSize =
	{
		width = mc:getWidth(),
		height = mc:getHeight()
	}

	self._background_mc = mc:getMember("background_mc")
	self._knob_mc = mc:getMember("knob_mc")

	self:addEventListener(MousePressEvent, self, self._onMousePress)
	self:addEventListener(MouseReleaseEvent, self, self._onMouseRelease)
	self:addEventListener(MouseMoveEvent, self, self._onMouseMove)

	self:setRange(0, 100)
end

function Slider:_onMousePress(event)
	self._trackOffset = self._mc:getMouseX() - self._knob_mc:getX()
	self._track = (self._trackOffset >= 0 and self._trackOffset < self._knob_mc:getWidth())
	self:setExclusive()
	return true
end

function Slider:_onMouseRelease(event)
	self._track = false
	self:releaseExclusive()
	return true
end

function Slider:_onMouseMove(event)
	if not self._track then return false end

	local x = self._mc:getMouseX() - self._trackOffset
	local mx = self._background_mc:getWidth() - self._knob_mc:getWidth()
	if x < 0 then
		x = 0
	elseif x > mx then
		x = mx
	end

	self._knob_mc:setX(x)

	if self._scrollFn ~= nil then
		self._scrollFn()
	end

	return true
end
	]]>
	</text>
</object>
