State 0:
          chunk ::= * block
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi

                         chunk accept
                         block shift  116
                         scope shift  54
                     {default} reduce 6

State 1:
          stat ::= IF * conds END
          conds ::= * condlist
          conds ::= * condlist ELSE block
          condlist ::= * cond
          condlist ::= * condlist ELSEIF cond
          cond ::= * exp THEN block
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  57
                         conds shift  103
                  functioncall shift  152
                      condlist shift  87
                          cond shift  124
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 2:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE * RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE * fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE * fieldlist COMMA|SEMICOLON RIGHT_BRACE
          fieldlist ::= * field
          fieldlist ::= * fieldlist COMMA|SEMICOLON field
          field ::= * exp
          field ::= * NAME EQUAL exp
          field ::= * LEFT_BRACKET exp RIGHT_BRACKET EQUAL exp

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  110
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                  LEFT_BRACKET shift  18
                    LEFT_BRACE shift  2
                   RIGHT_BRACE shift  143
                           exp shift  68
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153
                     fieldlist shift  78
                         field shift  139

State 3:
      (3) block ::= scope statlist *
          block ::= scope statlist * laststat semi
          scope ::= scope statlist * binding semi
          statlist ::= statlist * stat semi
          stat ::= * DO block END
          stat ::= * WHILE exp DO block END
          stat ::= * repetition DO block END
          stat ::= * REPEAT ublock
          stat ::= * IF conds END
          stat ::= * FUNCTION funcname funcbody
          stat ::= * setlist EQUAL explist1
          stat ::= * functioncall
          repetition ::= * FOR NAME EQUAL explist23
          repetition ::= * FOR namelist IN explist1
          laststat ::= * BREAK
          laststat ::= * RETURN
          laststat ::= * RETURN explist1
          binding ::= * LOCAL namelist
          binding ::= * LOCAL namelist EQUAL explist1
          binding ::= * LOCAL namelist LESS CONST GREATER EQUAL explist1
          binding ::= * LOCAL FUNCTION NAME funcbody
          setlist ::= * var
          setlist ::= * setlist COMMA var
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args

                          OPEN shift  20
                            DO shift  48
                         WHILE shift  32
                        REPEAT shift  34
                            IF shift  1
                      FUNCTION shift  41
                           FOR shift  50
                          NAME shift  154
                         BREAK shift  118
                        RETURN shift  8
                         LOCAL shift  49
                      laststat shift  53
                       binding shift  52
                          stat shift  51
                    repetition shift  106
                       setlist shift  85
                  functioncall shift  75
                     prefixexp shift  35
                           var shift  82
                     {default} reduce 3

State 4:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE fieldlist COMMA|SEMICOLON * RIGHT_BRACE
          fieldlist ::= fieldlist COMMA|SEMICOLON * field
          field ::= * exp
          field ::= * NAME EQUAL exp
          field ::= * LEFT_BRACKET exp RIGHT_BRACKET EQUAL exp

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  110
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                  LEFT_BRACKET shift  18
                    LEFT_BRACE shift  2
                   RIGHT_BRACE shift  141
                           exp shift  68
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153
                         field shift  140

State 5:
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          args ::= LEFT_PARANTHESIS * RIGHT_PARANTHESIS
          args ::= LEFT_PARANTHESIS * explist1 RIGHT_PARANTHESIS
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
             RIGHT_PARANTHESIS shift  133
                    LEFT_BRACE shift  2
                           exp shift  65
                      explist1 shift  88
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 6:
          binding ::= LOCAL namelist LESS CONST GREATER EQUAL * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  65
                      explist1 shift  91
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 7:
          binding ::= LOCAL namelist EQUAL * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  65
                      explist1 shift  95
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 8:
     (26) laststat ::= RETURN *
          laststat ::= RETURN * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  65
                      explist1 shift  96
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153
                     {default} reduce 26

State 9:
          repetition ::= FOR namelist IN * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  65
                      explist1 shift  98
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 10:
          repetition ::= FOR NAME EQUAL * explist23
          explist23 ::= * exp COMMA exp
          explist23 ::= * exp COMMA exp COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  56
                  functioncall shift  152
                     explist23 shift  119
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 11:
          stat ::= setlist EQUAL * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  65
                      explist1 shift  100
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 12:
          condlist ::= condlist ELSEIF * cond
          cond ::= * exp THEN block
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  57
                  functioncall shift  152
                          cond shift  126
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 13:
          explist23 ::= exp COMMA exp COMMA * exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  62
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 14:
          explist23 ::= exp COMMA * exp
          explist23 ::= exp COMMA * exp COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  55
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 15:
          ublock ::= block UNTIL * exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  63
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 16:
          explist1 ::= explist1 COMMA * exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  64
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 17:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          field ::= LEFT_BRACKET exp RIGHT_BRACKET EQUAL * exp

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  66
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 18:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          field ::= LEFT_BRACKET * exp RIGHT_BRACKET EQUAL exp

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  59
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 19:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          field ::= NAME EQUAL * exp

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  67
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 20:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          prefixexp ::= OPEN * exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  60
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 21:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          exp ::= exp RAISE * exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  79
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 22:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp MULTIPLY|DIVIDE|MODULO * exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  80
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 23:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= exp PLUS|MINUS * exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  76
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 24:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= exp BITWISE_AND * exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  69
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 25:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= exp BITWISE_OR * exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  70
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 26:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= exp DOT_DOT * exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  73
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 27:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL * exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  74
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 28:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  72
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 29:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= NOT|HASH|MINUS * exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  81
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 30:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= prefixexp LEFT_BRACKET * exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  58
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 31:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  71
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 32:
          stat ::= WHILE * exp DO block END
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp BITWISE_OR exp
          exp ::= * exp BITWISE_AND exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  20
                      FUNCTION shift  42
                          NAME shift  154
                         MINUS shift  29
                           NOT shift  29
                          HASH shift  29
                           NIL shift  157
                          TRUE shift  157
                         FALSE shift  157
                        NUMBER shift  157
                        STRING shift  157
                   DOT_DOT_DOT shift  157
                    LEFT_BRACE shift  2
                           exp shift  61
                  functioncall shift  152
                      function shift  156
                     prefixexp shift  36
              tableconstructor shift  155
                           var shift  153

State 33:
          setlist ::= setlist COMMA * var
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args

                          OPEN shift  20
                          NAME shift  154
                  functioncall shift  152
                     prefixexp shift  35
                           var shift  84

State 34:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
          ublock ::= * block UNTIL exp
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= REPEAT * ublock

                         block shift  104
                         scope shift  54
                        ublock shift  129
                     {default} reduce 6

State 35:
          var ::= prefixexp * LEFT_BRACKET exp RIGHT_BRACKET
          var ::= prefixexp * DOT NAME
          functioncall ::= prefixexp * args
          functioncall ::= prefixexp * COLON NAME args
          args ::= * LEFT_PARANTHESIS RIGHT_PARANTHESIS
          args ::= * LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS
          args ::= * tableconstructor
          args ::= * STRING
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

              LEFT_PARANTHESIS shift  5
                         COLON shift  107
                           DOT shift  108
                        STRING shift  131
                  LEFT_BRACKET shift  30
                    LEFT_BRACE shift  2
              tableconstructor shift  132
                          args shift  136

State 36:
     (44) exp ::= prefixexp *
          var ::= prefixexp * LEFT_BRACKET exp RIGHT_BRACKET
          var ::= prefixexp * DOT NAME
          functioncall ::= prefixexp * args
          functioncall ::= prefixexp * COLON NAME args
          args ::= * LEFT_PARANTHESIS RIGHT_PARANTHESIS
          args ::= * LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS
          args ::= * tableconstructor
          args ::= * STRING
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

              LEFT_PARANTHESIS shift  5
                         COLON shift  107
                           DOT shift  108
                        STRING shift  131
                  LEFT_BRACKET shift  30
                    LEFT_BRACE shift  2
              tableconstructor shift  132
                          args shift  136
                     {default} reduce 44

State 37:
          functioncall ::= prefixexp COLON NAME * args
          args ::= * LEFT_PARANTHESIS RIGHT_PARANTHESIS
          args ::= * LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS
          args ::= * tableconstructor
          args ::= * STRING
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

              LEFT_PARANTHESIS shift  5
                        STRING shift  131
                    LEFT_BRACE shift  2
              tableconstructor shift  132
                          args shift  135

State 38:
          namelist ::= * NAME
          namelist ::= * namelist COMMA NAME
          params ::= LEFT_PARANTHESIS * parlist RIGHT_PARANTHESIS
     (73) parlist ::= *
          parlist ::= * namelist
          parlist ::= * DOT_DOT_DOT
          parlist ::= * namelist COMMA DOT_DOT_DOT

                          NAME shift  148
                   DOT_DOT_DOT shift  144
                      namelist shift  112
                       parlist shift  111
                     {default} reduce 73

State 39:
          binding ::= LOCAL FUNCTION NAME * funcbody
          funcbody ::= * params block END
          params ::= * LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS

              LEFT_PARANTHESIS shift  38
                      funcbody shift  117
                        params shift  46

State 40:
          stat ::= FUNCTION funcname * funcbody
          funcbody ::= * params block END
          params ::= * LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS

              LEFT_PARANTHESIS shift  38
                      funcbody shift  123
                        params shift  46

State 41:
          stat ::= FUNCTION * funcname funcbody
          funcname ::= * dottedname
          funcname ::= * dottedname COLON NAME
          dottedname ::= * NAME
          dottedname ::= * dottedname DOT NAME

                          NAME shift  120
                      funcname shift  40
                    dottedname shift  86

State 42:
          function ::= FUNCTION * funcbody
          funcbody ::= * params block END
          params ::= * LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS

              LEFT_PARANTHESIS shift  38
                      funcbody shift  150
                        params shift  46

State 43:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          cond ::= exp THEN * block

                         block shift  125
                         scope shift  54
                     {default} reduce 6

State 44:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          conds ::= condlist ELSE * block

                         block shift  127
                         scope shift  54
                     {default} reduce 6

State 45:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= repetition DO * block END

                         block shift  105
                         scope shift  54
                     {default} reduce 6

State 46:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          funcbody ::= params * block END

                         block shift  113
                         scope shift  54
                     {default} reduce 6

State 47:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= WHILE exp DO * block END

                         block shift  114
                         scope shift  54
                     {default} reduce 6

State 48:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= DO * block END

                         block shift  115
                         scope shift  54
                     {default} reduce 6

State 49:
          binding ::= LOCAL * namelist
          binding ::= LOCAL * namelist EQUAL explist1
          binding ::= LOCAL * namelist LESS CONST GREATER EQUAL explist1
          binding ::= LOCAL * FUNCTION NAME funcbody
          namelist ::= * NAME
          namelist ::= * namelist COMMA NAME

                      FUNCTION shift  90
                          NAME shift  148
                      namelist shift  77

State 50:
          repetition ::= FOR * NAME EQUAL explist23
          repetition ::= FOR * namelist IN explist1
          namelist ::= * NAME
          namelist ::= * namelist COMMA NAME

                          NAME shift  99
                      namelist shift  83

State 51:
          semi ::= * SEMICOLON
      (2) semi ::= *
          statlist ::= statlist stat * semi

                     SEMICOLON shift  163
                          semi shift  160
                     {default} reduce 2

State 52:
          semi ::= * SEMICOLON
      (2) semi ::= *
          scope ::= scope statlist binding * semi

                     SEMICOLON shift  163
                          semi shift  161
                     {default} reduce 2

State 53:
          semi ::= * SEMICOLON
      (2) semi ::= *
          block ::= scope statlist laststat * semi

                     SEMICOLON shift  163
                          semi shift  162
                     {default} reduce 2

State 54:
          block ::= scope * statlist
          block ::= scope * statlist laststat semi
          scope ::= scope * statlist binding semi
      (8) statlist ::= *
          statlist ::= * statlist stat semi

                      statlist shift  3
                     {default} reduce 8

State 55:
     (40) explist23 ::= exp COMMA exp *
          explist23 ::= exp COMMA exp * COMMA exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                         COMMA shift  13
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 40

State 56:
          explist23 ::= exp * COMMA exp
          explist23 ::= exp * COMMA exp COMMA exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                         COMMA shift  14
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24

State 57:
          cond ::= exp * THEN block
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          THEN shift  43
                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24

State 58:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
          var ::= prefixexp LEFT_BRACKET exp * RIGHT_BRACKET

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                 RIGHT_BRACKET shift  138

State 59:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
          field ::= LEFT_BRACKET exp * RIGHT_BRACKET EQUAL exp

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                 RIGHT_BRACKET shift  109

State 60:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
          prefixexp ::= OPEN exp * RIGHT_PARANTHESIS

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
             RIGHT_PARANTHESIS shift  151

State 61:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                            DO shift  47
                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24

State 62:
     (41) explist23 ::= exp COMMA exp COMMA exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 41

State 63:
      (5) ublock ::= block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 5

State 64:
     (39) explist1 ::= explist1 COMMA exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 39

State 65:
     (38) explist1 ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 38

State 66:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (84) field ::= LEFT_BRACKET exp RIGHT_BRACKET EQUAL exp *

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 84

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (83) field ::= NAME EQUAL exp *

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 83

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (82) field ::= exp *

                          LESS shift  27
                       GREATER shift  27
                            OR shift  31
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                   BITWISE_AND shift  24
                     {default} reduce 82

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
     (52) exp ::= exp BITWISE_AND exp *
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                          LESS reduce 52  ** Parsing conflict **
                       GREATER shift  27
                       GREATER reduce 52  ** Parsing conflict **
                            OR shift  31
                            OR reduce 52  ** Parsing conflict **
                           AND shift  28
                           AND reduce 52  ** Parsing conflict **
                    LESS_EQUAL shift  27
                    LESS_EQUAL reduce 52  ** Parsing conflict **
                 GREATER_EQUAL shift  27
                 GREATER_EQUAL reduce 52  ** Parsing conflict **
                   EQUAL_EQUAL shift  27
                   EQUAL_EQUAL reduce 52  ** Parsing conflict **
                     NOT_EQUAL shift  27
                     NOT_EQUAL reduce 52  ** Parsing conflict **
                       DOT_DOT shift  26
                       DOT_DOT reduce 52  ** Parsing conflict **
                          PLUS shift  23
                          PLUS reduce 52  ** Parsing conflict **
                         MINUS shift  23
                         MINUS reduce 52  ** Parsing conflict **
                      MULTIPLY shift  22
                      MULTIPLY reduce 52  ** Parsing conflict **
                        DIVIDE shift  22
                        DIVIDE reduce 52  ** Parsing conflict **
                        MODULO shift  22
                        MODULO reduce 52  ** Parsing conflict **
                         RAISE shift  21
                         RAISE reduce 52  ** Parsing conflict **
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 52  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 52  ** Parsing conflict **
                     {default} reduce 52

State 70:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
     (51) exp ::= exp BITWISE_OR exp *
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                          LESS reduce 51  ** Parsing conflict **
                       GREATER shift  27
                       GREATER reduce 51  ** Parsing conflict **
                            OR shift  31
                            OR reduce 51  ** Parsing conflict **
                           AND shift  28
                           AND reduce 51  ** Parsing conflict **
                    LESS_EQUAL shift  27
                    LESS_EQUAL reduce 51  ** Parsing conflict **
                 GREATER_EQUAL shift  27
                 GREATER_EQUAL reduce 51  ** Parsing conflict **
                   EQUAL_EQUAL shift  27
                   EQUAL_EQUAL reduce 51  ** Parsing conflict **
                     NOT_EQUAL shift  27
                     NOT_EQUAL reduce 51  ** Parsing conflict **
                       DOT_DOT shift  26
                       DOT_DOT reduce 51  ** Parsing conflict **
                          PLUS shift  23
                          PLUS reduce 51  ** Parsing conflict **
                         MINUS shift  23
                         MINUS reduce 51  ** Parsing conflict **
                      MULTIPLY shift  22
                      MULTIPLY reduce 51  ** Parsing conflict **
                        DIVIDE shift  22
                        DIVIDE reduce 51  ** Parsing conflict **
                        MODULO shift  22
                        MODULO reduce 51  ** Parsing conflict **
                         RAISE shift  21
                         RAISE reduce 51  ** Parsing conflict **
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 51  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 51  ** Parsing conflict **
                     {default} reduce 51

State 71:
          exp ::= exp * OR exp
     (47) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                           AND shift  28
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 47  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 47  ** Parsing conflict **
                     {default} reduce 47

State 72:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (48) exp ::= exp AND exp *
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  27
                       GREATER shift  27
                    LESS_EQUAL shift  27
                 GREATER_EQUAL shift  27
                   EQUAL_EQUAL shift  27
                     NOT_EQUAL shift  27
                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 48  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 48  ** Parsing conflict **
                     {default} reduce 48

State 73:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
     (50) exp ::= exp DOT_DOT exp *
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 50  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 50  ** Parsing conflict **
                     {default} reduce 50

State 74:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
     (49) exp ::= exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp *
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                       DOT_DOT shift  26
                          PLUS shift  23
                         MINUS shift  23
                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 49  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 49  ** Parsing conflict **
                     {default} reduce 49

State 75:
     (17) stat ::= functioncall *
     (62) prefixexp ::= functioncall *

              LEFT_PARANTHESIS reduce 62
                         COLON reduce 62
                           DOT reduce 62
                        STRING reduce 62
                  LEFT_BRACKET reduce 62
                    LEFT_BRACE reduce 62
                     {default} reduce 17

State 76:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
     (53) exp ::= exp PLUS|MINUS exp *
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                      MULTIPLY shift  22
                        DIVIDE shift  22
                        MODULO shift  22
                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 53  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 53  ** Parsing conflict **
                     {default} reduce 53

State 77:
     (28) binding ::= LOCAL namelist *
          binding ::= LOCAL namelist * EQUAL explist1
          binding ::= LOCAL namelist * LESS CONST GREATER EQUAL explist1
          namelist ::= namelist * COMMA NAME

                         EQUAL shift  7
                          LESS shift  94
                         COMMA shift  97
                     {default} reduce 28

State 78:
          tableconstructor ::= LEFT_BRACE fieldlist * RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE fieldlist * COMMA|SEMICOLON RIGHT_BRACE
          fieldlist ::= fieldlist * COMMA|SEMICOLON field

                     SEMICOLON shift  4
                         COMMA shift  4
                   RIGHT_BRACE shift  142

State 79:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (55) exp ::= exp RAISE exp *

                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 55  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 55  ** Parsing conflict **
                     {default} reduce 55

State 80:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
     (54) exp ::= exp MULTIPLY|DIVIDE|MODULO exp *
          exp ::= exp * RAISE exp

                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 54  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 54  ** Parsing conflict **
                     {default} reduce 54

State 81:
     (46) exp ::= NOT|HASH|MINUS exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * BITWISE_OR exp
          exp ::= exp * BITWISE_AND exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                         RAISE shift  21
                    BITWISE_OR shift  25
                    BITWISE_OR reduce 46  ** Parsing conflict **
                   BITWISE_AND shift  24
                   BITWISE_AND reduce 46  ** Parsing conflict **
                     {default} reduce 46

State 82:
     (56) setlist ::= var *
     (61) prefixexp ::= var *

                         EQUAL reduce 56
                         COMMA reduce 56
                     {default} reduce 61

State 83:
          repetition ::= FOR namelist * IN explist1
          namelist ::= namelist * COMMA NAME

                            IN shift  9
                         COMMA shift  97

State 84:
     (57) setlist ::= setlist COMMA var *
     (61) prefixexp ::= var *

                         EQUAL reduce 57
                         COMMA reduce 57
                     {default} reduce 61

State 85:
          stat ::= setlist * EQUAL explist1
          setlist ::= setlist * COMMA var

                         EQUAL shift  11
                         COMMA shift  33

State 86:
     (32) funcname ::= dottedname *
          funcname ::= dottedname * COLON NAME
          dottedname ::= dottedname * DOT NAME

                         COLON shift  102
                           DOT shift  101
                     {default} reduce 32

State 87:
     (20) conds ::= condlist *
          conds ::= condlist * ELSE block
          condlist ::= condlist * ELSEIF cond

                          ELSE shift  44
                        ELSEIF shift  12
                     {default} reduce 20

State 88:
          explist1 ::= explist1 * COMMA exp
          args ::= LEFT_PARANTHESIS explist1 * RIGHT_PARANTHESIS

                         COMMA shift  16
             RIGHT_PARANTHESIS shift  134

State 89:
          namelist ::= namelist COMMA * NAME
          parlist ::= namelist COMMA * DOT_DOT_DOT

                          NAME shift  147
                   DOT_DOT_DOT shift  146

State 90:
          binding ::= LOCAL FUNCTION * NAME funcbody

                          NAME shift  39

State 91:
     (30) binding ::= LOCAL namelist LESS CONST GREATER EQUAL explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  16
                     {default} reduce 30

State 92:
          binding ::= LOCAL namelist LESS CONST GREATER * EQUAL explist1

                         EQUAL shift  6

State 93:
          binding ::= LOCAL namelist LESS CONST * GREATER EQUAL explist1

                       GREATER shift  92

State 94:
          binding ::= LOCAL namelist LESS * CONST GREATER EQUAL explist1

                         CONST shift  93

State 95:
     (29) binding ::= LOCAL namelist EQUAL explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  16
                     {default} reduce 29

State 96:
     (27) laststat ::= RETURN explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  16
                     {default} reduce 27

State 97:
          namelist ::= namelist COMMA * NAME

                          NAME shift  147

State 98:
     (19) repetition ::= FOR namelist IN explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  16
                     {default} reduce 19

State 99:
          repetition ::= FOR NAME * EQUAL explist23
     (36) namelist ::= NAME *

                         EQUAL shift  10
                     {default} reduce 36

State 100:
     (16) stat ::= setlist EQUAL explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  16
                     {default} reduce 16

State 101:
          dottedname ::= dottedname DOT * NAME

                          NAME shift  121

State 102:
          funcname ::= dottedname COLON * NAME

                          NAME shift  122

State 103:
          stat ::= IF conds * END

                           END shift  128

State 104:
          ublock ::= block * UNTIL exp

                         UNTIL shift  15

State 105:
          stat ::= repetition DO block * END

                           END shift  130

State 106:
          stat ::= repetition * DO block END

                            DO shift  45

State 107:
          functioncall ::= prefixexp COLON * NAME args

                          NAME shift  37

State 108:
          var ::= prefixexp DOT * NAME

                          NAME shift  137

State 109:
          field ::= LEFT_BRACKET exp RIGHT_BRACKET * EQUAL exp

                         EQUAL shift  17

State 110:
     (58) var ::= NAME *
          field ::= NAME * EQUAL exp

                         EQUAL shift  19
                     {default} reduce 58

State 111:
          params ::= LEFT_PARANTHESIS parlist * RIGHT_PARANTHESIS

             RIGHT_PARANTHESIS shift  145

State 112:
          namelist ::= namelist * COMMA NAME
     (74) parlist ::= namelist *
          parlist ::= namelist * COMMA DOT_DOT_DOT

                         COMMA shift  89
                     {default} reduce 74

State 113:
          funcbody ::= params block * END

                           END shift  149

State 114:
          stat ::= WHILE exp DO block * END

                           END shift  158

State 115:
          stat ::= DO block * END

                           END shift  159

State 116:
      (0) chunk ::= block *

                             $ reduce 0

State 117:
     (31) binding ::= LOCAL FUNCTION NAME funcbody *

                     {default} reduce 31

State 118:
     (25) laststat ::= BREAK *

                     {default} reduce 25

State 119:
     (18) repetition ::= FOR NAME EQUAL explist23 *

                     {default} reduce 18

State 120:
     (34) dottedname ::= NAME *

                     {default} reduce 34

State 121:
     (35) dottedname ::= dottedname DOT NAME *

                     {default} reduce 35

State 122:
     (33) funcname ::= dottedname COLON NAME *

                     {default} reduce 33

State 123:
     (15) stat ::= FUNCTION funcname funcbody *

                     {default} reduce 15

State 124:
     (22) condlist ::= cond *

                     {default} reduce 22

State 125:
     (24) cond ::= exp THEN block *

                     {default} reduce 24

State 126:
     (23) condlist ::= condlist ELSEIF cond *

                     {default} reduce 23

State 127:
     (21) conds ::= condlist ELSE block *

                     {default} reduce 21

State 128:
     (14) stat ::= IF conds END *

                     {default} reduce 14

State 129:
     (13) stat ::= REPEAT ublock *

                     {default} reduce 13

State 130:
     (12) stat ::= repetition DO block END *

                     {default} reduce 12

State 131:
     (69) args ::= STRING *

                     {default} reduce 69

State 132:
     (68) args ::= tableconstructor *

                     {default} reduce 68

State 133:
     (66) args ::= LEFT_PARANTHESIS RIGHT_PARANTHESIS *

                     {default} reduce 66

State 134:
     (67) args ::= LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS *

                     {default} reduce 67

State 135:
     (65) functioncall ::= prefixexp COLON NAME args *

                     {default} reduce 65

State 136:
     (64) functioncall ::= prefixexp args *

                     {default} reduce 64

State 137:
     (60) var ::= prefixexp DOT NAME *

                     {default} reduce 60

State 138:
     (59) var ::= prefixexp LEFT_BRACKET exp RIGHT_BRACKET *

                     {default} reduce 59

State 139:
     (80) fieldlist ::= field *

                     {default} reduce 80

State 140:
     (81) fieldlist ::= fieldlist COMMA|SEMICOLON field *

                     {default} reduce 81

State 141:
     (79) tableconstructor ::= LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE *

                     {default} reduce 79

State 142:
     (78) tableconstructor ::= LEFT_BRACE fieldlist RIGHT_BRACE *

                     {default} reduce 78

State 143:
     (77) tableconstructor ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 77

State 144:
     (75) parlist ::= DOT_DOT_DOT *

                     {default} reduce 75

State 145:
     (72) params ::= LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS *

                     {default} reduce 72

State 146:
     (76) parlist ::= namelist COMMA DOT_DOT_DOT *

                     {default} reduce 76

State 147:
     (37) namelist ::= namelist COMMA NAME *

                     {default} reduce 37

State 148:
     (36) namelist ::= NAME *

                     {default} reduce 36

State 149:
     (71) funcbody ::= params block END *

                     {default} reduce 71

State 150:
     (70) function ::= FUNCTION funcbody *

                     {default} reduce 70

State 151:
     (63) prefixexp ::= OPEN exp RIGHT_PARANTHESIS *

                     {default} reduce 63

State 152:
     (62) prefixexp ::= functioncall *

                     {default} reduce 62

State 153:
     (61) prefixexp ::= var *

                     {default} reduce 61

State 154:
     (58) var ::= NAME *

                     {default} reduce 58

State 155:
     (45) exp ::= tableconstructor *

                     {default} reduce 45

State 156:
     (43) exp ::= function *

                     {default} reduce 43

State 157:
     (42) exp ::= NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT *

                     {default} reduce 42

State 158:
     (11) stat ::= WHILE exp DO block END *

                     {default} reduce 11

State 159:
     (10) stat ::= DO block END *

                     {default} reduce 10

State 160:
      (9) statlist ::= statlist stat semi *

                     {default} reduce 9

State 161:
      (7) scope ::= scope statlist binding semi *

                     {default} reduce 7

State 162:
      (4) block ::= scope statlist laststat semi *

                     {default} reduce 4

State 163:
      (1) semi ::= SEMICOLON *

                     {default} reduce 1

----------------------------------------------------
Symbols:
    0: $:
    1: OPEN
    2: LEFT_PARANTHESIS
    3: SEMICOLON
    4: UNTIL
    5: DO
    6: END
    7: WHILE
    8: REPEAT
    9: IF
   10: FUNCTION
   11: EQUAL
   12: FOR
   13: NAME
   14: IN
   15: ELSE
   16: ELSEIF
   17: THEN
   18: BREAK
   19: RETURN
   20: LOCAL
   21: LESS
   22: CONST
   23: GREATER
   24: COLON
   25: DOT
   26: COMMA
   27: OR
   28: AND
   29: LESS_EQUAL
   30: GREATER_EQUAL
   31: EQUAL_EQUAL
   32: NOT_EQUAL
   33: DOT_DOT
   34: PLUS
   35: MINUS
   36: MULTIPLY
   37: DIVIDE
   38: MODULO
   39: NOT
   40: HASH
   41: RAISE
   42: NIL
   43: TRUE
   44: FALSE
   45: NUMBER
   46: STRING
   47: DOT_DOT_DOT
   48: BITWISE_OR
   49: BITWISE_AND
   50: LEFT_BRACKET
   51: RIGHT_BRACKET
   52: RIGHT_PARANTHESIS
   53: LEFT_BRACE
   54: RIGHT_BRACE
   55: error:
   56: chunk: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME BREAK RETURN LOCAL
   57: block: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME BREAK RETURN LOCAL
   58: semi: <lambda> SEMICOLON
   59: scope: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME LOCAL
   60: statlist: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME
   61: laststat: BREAK RETURN
   62: ublock: OPEN UNTIL DO WHILE REPEAT IF FUNCTION FOR NAME BREAK RETURN LOCAL
   63: exp: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   64: binding: LOCAL
   65: stat: OPEN DO WHILE REPEAT IF FUNCTION FOR NAME
   66: repetition: FOR
   67: conds: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   68: funcname: NAME
   69: funcbody: LEFT_PARANTHESIS
   70: setlist: OPEN NAME
   71: explist1: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   72: functioncall: OPEN NAME
   73: explist23: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   74: namelist: NAME
   75: condlist: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   76: cond: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   77: dottedname: NAME
   78: function: FUNCTION
   79: prefixexp: OPEN NAME
   80: tableconstructor: LEFT_BRACE
   81: var: OPEN NAME
   82: args: LEFT_PARANTHESIS STRING LEFT_BRACE
   83: params: LEFT_PARANTHESIS
   84: parlist: <lambda> NAME DOT_DOT_DOT
   85: fieldlist: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACKET LEFT_BRACE
   86: field: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACKET LEFT_BRACE
