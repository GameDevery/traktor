State 0:
          chunk ::= * block
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi

                         chunk accept
                         block shift  107
                         scope shift  51
                     {default} reduce 6

State 1:
          stat ::= IF * conds END
          conds ::= * condlist
          conds ::= * condlist ELSE block
          condlist ::= * cond
          condlist ::= * condlist ELSEIF cond
          cond ::= * exp THEN block
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  54
                         conds shift  91
                  functioncall shift  143
                      condlist shift  79
                          cond shift  115
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 2:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE * RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE * fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE * fieldlist COMMA|SEMICOLON RIGHT_BRACE
          fieldlist ::= * field
          fieldlist ::= * fieldlist COMMA|SEMICOLON field
          field ::= * exp
          field ::= * NAME EQUAL exp
          field ::= * LEFT_BRACKET exp RIGHT_BRACKET EQUAL exp

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  98
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                  LEFT_BRACKET shift  17
                    LEFT_BRACE shift  2
                   RIGHT_BRACE shift  134
                           exp shift  65
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144
                     fieldlist shift  72
                         field shift  130

State 3:
      (3) block ::= scope statlist *
          block ::= scope statlist * laststat semi
          scope ::= scope statlist * binding semi
          statlist ::= statlist * stat semi
          stat ::= * DO block END
          stat ::= * WHILE exp DO block END
          stat ::= * repetition DO block END
          stat ::= * REPEAT ublock
          stat ::= * IF conds END
          stat ::= * FUNCTION funcname funcbody
          stat ::= * setlist EQUAL explist1
          stat ::= * functioncall
          repetition ::= * FOR NAME EQUAL explist23
          repetition ::= * FOR namelist IN explist1
          laststat ::= * BREAK
          laststat ::= * RETURN
          laststat ::= * RETURN explist1
          binding ::= * LOCAL namelist
          binding ::= * LOCAL namelist EQUAL explist1
          binding ::= * LOCAL FUNCTION NAME funcbody
          setlist ::= * var
          setlist ::= * setlist COMMA var
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args

                          OPEN shift  19
                            DO shift  45
                         WHILE shift  29
                        REPEAT shift  31
                            IF shift  1
                      FUNCTION shift  38
                           FOR shift  47
                          NAME shift  145
                         BREAK shift  109
                        RETURN shift  7
                         LOCAL shift  46
                      laststat shift  50
                       binding shift  49
                          stat shift  48
                    repetition shift  94
                       setlist shift  77
                  functioncall shift  70
                     prefixexp shift  32
                           var shift  73
                     {default} reduce 3

State 4:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE fieldlist COMMA|SEMICOLON * RIGHT_BRACE
          fieldlist ::= fieldlist COMMA|SEMICOLON * field
          field ::= * exp
          field ::= * NAME EQUAL exp
          field ::= * LEFT_BRACKET exp RIGHT_BRACKET EQUAL exp

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  98
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                  LEFT_BRACKET shift  17
                    LEFT_BRACE shift  2
                   RIGHT_BRACE shift  132
                           exp shift  65
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144
                         field shift  131

State 5:
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          args ::= LEFT_PARANTHESIS * RIGHT_PARANTHESIS
          args ::= LEFT_PARANTHESIS * explist1 RIGHT_PARANTHESIS
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
             RIGHT_PARANTHESIS shift  124
                    LEFT_BRACE shift  2
                           exp shift  62
                      explist1 shift  80
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 6:
          binding ::= LOCAL namelist EQUAL * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  62
                      explist1 shift  83
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 7:
     (26) laststat ::= RETURN *
          laststat ::= RETURN * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  62
                      explist1 shift  84
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144
                     {default} reduce 26

State 8:
          repetition ::= FOR namelist IN * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  62
                      explist1 shift  86
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 9:
          repetition ::= FOR NAME EQUAL * explist23
          explist23 ::= * exp COMMA exp
          explist23 ::= * exp COMMA exp COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  53
                  functioncall shift  143
                     explist23 shift  110
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 10:
          stat ::= setlist EQUAL * explist1
          explist1 ::= * exp
          explist1 ::= * explist1 COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  62
                      explist1 shift  88
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 11:
          condlist ::= condlist ELSEIF * cond
          cond ::= * exp THEN block
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  54
                  functioncall shift  143
                          cond shift  117
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 12:
          explist23 ::= exp COMMA exp COMMA * exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  59
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 13:
          explist23 ::= exp COMMA * exp
          explist23 ::= exp COMMA * exp COMMA exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  52
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 14:
          ublock ::= block UNTIL * exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  60
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 15:
          explist1 ::= explist1 COMMA * exp
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  61
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 16:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          field ::= LEFT_BRACKET exp RIGHT_BRACKET EQUAL * exp

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  63
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 17:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          field ::= LEFT_BRACKET * exp RIGHT_BRACKET EQUAL exp

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  56
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 18:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE
          field ::= NAME EQUAL * exp

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  64
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 19:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          prefixexp ::= OPEN * exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  57
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 20:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          exp ::= exp RAISE * exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  102
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 21:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp MULTIPLY|DIVIDE|MODULO * exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  103
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 22:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= exp PLUS|MINUS * exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  71
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 23:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= exp DOT_DOT * exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  68
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 24:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL * exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  69
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 25:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  67
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 26:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= NOT|HASH|MINUS * exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  104
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 27:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= prefixexp LEFT_BRACKET * exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  55
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 28:
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  66
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 29:
          stat ::= WHILE * exp DO block END
          exp ::= * NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT
          exp ::= * function
          exp ::= * prefixexp
          exp ::= * tableconstructor
          exp ::= * NOT|HASH|MINUS exp
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= * exp DOT_DOT exp
          exp ::= * exp PLUS|MINUS exp
          exp ::= * exp MULTIPLY|DIVIDE|MODULO exp
          exp ::= * exp RAISE exp
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args
          function ::= * FUNCTION funcbody
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

                          OPEN shift  19
                      FUNCTION shift  39
                          NAME shift  145
                         MINUS shift  26
                           NOT shift  26
                          HASH shift  26
                           NIL shift  148
                          TRUE shift  148
                         FALSE shift  148
                        NUMBER shift  148
                        STRING shift  148
                   DOT_DOT_DOT shift  148
                    LEFT_BRACE shift  2
                           exp shift  58
                  functioncall shift  143
                      function shift  147
                     prefixexp shift  33
              tableconstructor shift  146
                           var shift  144

State 30:
          setlist ::= setlist COMMA * var
          var ::= * NAME
          var ::= * prefixexp LEFT_BRACKET exp RIGHT_BRACKET
          var ::= * prefixexp DOT NAME
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * OPEN exp RIGHT_PARANTHESIS
          functioncall ::= * prefixexp args
          functioncall ::= * prefixexp COLON NAME args

                          OPEN shift  19
                          NAME shift  145
                  functioncall shift  143
                     prefixexp shift  32
                           var shift  76

State 31:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
          ublock ::= * block UNTIL exp
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= REPEAT * ublock

                         block shift  92
                         scope shift  51
                        ublock shift  120
                     {default} reduce 6

State 32:
          var ::= prefixexp * LEFT_BRACKET exp RIGHT_BRACKET
          var ::= prefixexp * DOT NAME
          functioncall ::= prefixexp * args
          functioncall ::= prefixexp * COLON NAME args
          args ::= * LEFT_PARANTHESIS RIGHT_PARANTHESIS
          args ::= * LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS
          args ::= * tableconstructor
          args ::= * STRING
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

              LEFT_PARANTHESIS shift  5
                         COLON shift  95
                           DOT shift  96
                        STRING shift  122
                  LEFT_BRACKET shift  27
                    LEFT_BRACE shift  2
              tableconstructor shift  123
                          args shift  127

State 33:
     (43) exp ::= prefixexp *
          var ::= prefixexp * LEFT_BRACKET exp RIGHT_BRACKET
          var ::= prefixexp * DOT NAME
          functioncall ::= prefixexp * args
          functioncall ::= prefixexp * COLON NAME args
          args ::= * LEFT_PARANTHESIS RIGHT_PARANTHESIS
          args ::= * LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS
          args ::= * tableconstructor
          args ::= * STRING
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

              LEFT_PARANTHESIS shift  5
                         COLON shift  95
                           DOT shift  96
                        STRING shift  122
                  LEFT_BRACKET shift  27
                    LEFT_BRACE shift  2
              tableconstructor shift  123
                          args shift  127
                     {default} reduce 43

State 34:
          functioncall ::= prefixexp COLON NAME * args
          args ::= * LEFT_PARANTHESIS RIGHT_PARANTHESIS
          args ::= * LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS
          args ::= * tableconstructor
          args ::= * STRING
          tableconstructor ::= * LEFT_BRACE RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist RIGHT_BRACE
          tableconstructor ::= * LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE

              LEFT_PARANTHESIS shift  5
                        STRING shift  122
                    LEFT_BRACE shift  2
              tableconstructor shift  123
                          args shift  126

State 35:
          namelist ::= * NAME
          namelist ::= * namelist COMMA NAME
          params ::= LEFT_PARANTHESIS * parlist RIGHT_PARANTHESIS
     (70) parlist ::= *
          parlist ::= * namelist
          parlist ::= * DOT_DOT_DOT
          parlist ::= * namelist COMMA DOT_DOT_DOT

                          NAME shift  139
                   DOT_DOT_DOT shift  135
                      namelist shift  100
                       parlist shift  99
                     {default} reduce 70

State 36:
          binding ::= LOCAL FUNCTION NAME * funcbody
          funcbody ::= * params block END
          params ::= * LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS

              LEFT_PARANTHESIS shift  35
                      funcbody shift  108
                        params shift  43

State 37:
          stat ::= FUNCTION funcname * funcbody
          funcbody ::= * params block END
          params ::= * LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS

              LEFT_PARANTHESIS shift  35
                      funcbody shift  114
                        params shift  43

State 38:
          stat ::= FUNCTION * funcname funcbody
          funcname ::= * dottedname
          funcname ::= * dottedname COLON NAME
          dottedname ::= * NAME
          dottedname ::= * dottedname DOT NAME

                          NAME shift  111
                      funcname shift  37
                    dottedname shift  78

State 39:
          function ::= FUNCTION * funcbody
          funcbody ::= * params block END
          params ::= * LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS

              LEFT_PARANTHESIS shift  35
                      funcbody shift  141
                        params shift  43

State 40:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          cond ::= exp THEN * block

                         block shift  116
                         scope shift  51
                     {default} reduce 6

State 41:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          conds ::= condlist ELSE * block

                         block shift  118
                         scope shift  51
                     {default} reduce 6

State 42:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= repetition DO * block END

                         block shift  93
                         scope shift  51
                     {default} reduce 6

State 43:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          funcbody ::= params * block END

                         block shift  101
                         scope shift  51
                     {default} reduce 6

State 44:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= WHILE exp DO * block END

                         block shift  105
                         scope shift  51
                     {default} reduce 6

State 45:
          block ::= * scope statlist
          block ::= * scope statlist laststat semi
      (6) scope ::= *
          scope ::= * scope statlist binding semi
          stat ::= DO * block END

                         block shift  106
                         scope shift  51
                     {default} reduce 6

State 46:
          binding ::= LOCAL * namelist
          binding ::= LOCAL * namelist EQUAL explist1
          binding ::= LOCAL * FUNCTION NAME funcbody
          namelist ::= * NAME
          namelist ::= * namelist COMMA NAME

                      FUNCTION shift  82
                          NAME shift  139
                      namelist shift  74

State 47:
          repetition ::= FOR * NAME EQUAL explist23
          repetition ::= FOR * namelist IN explist1
          namelist ::= * NAME
          namelist ::= * namelist COMMA NAME

                          NAME shift  87
                      namelist shift  75

State 48:
          semi ::= * SEMICOLON
      (2) semi ::= *
          statlist ::= statlist stat * semi

                     SEMICOLON shift  154
                          semi shift  151
                     {default} reduce 2

State 49:
          semi ::= * SEMICOLON
      (2) semi ::= *
          scope ::= scope statlist binding * semi

                     SEMICOLON shift  154
                          semi shift  152
                     {default} reduce 2

State 50:
          semi ::= * SEMICOLON
      (2) semi ::= *
          block ::= scope statlist laststat * semi

                     SEMICOLON shift  154
                          semi shift  153
                     {default} reduce 2

State 51:
          block ::= scope * statlist
          block ::= scope * statlist laststat semi
          scope ::= scope * statlist binding semi
      (8) statlist ::= *
          statlist ::= * statlist stat semi

                      statlist shift  3
                     {default} reduce 8

State 52:
     (39) explist23 ::= exp COMMA exp *
          explist23 ::= exp COMMA exp * COMMA exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                         COMMA shift  12
                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 39

State 53:
          explist23 ::= exp * COMMA exp
          explist23 ::= exp * COMMA exp COMMA exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                         COMMA shift  13
                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20

State 54:
          cond ::= exp * THEN block
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          THEN shift  40
                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20

State 55:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
          var ::= prefixexp LEFT_BRACKET exp * RIGHT_BRACKET

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                 RIGHT_BRACKET shift  129

State 56:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
          field ::= LEFT_BRACKET exp * RIGHT_BRACKET EQUAL exp

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                 RIGHT_BRACKET shift  97

State 57:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
          prefixexp ::= OPEN exp * RIGHT_PARANTHESIS

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
             RIGHT_PARANTHESIS shift  142

State 58:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                            DO shift  44
                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20

State 59:
     (40) explist23 ::= exp COMMA exp COMMA exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 40

State 60:
      (5) ublock ::= block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 5

State 61:
     (38) explist1 ::= explist1 COMMA exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 38

State 62:
     (37) explist1 ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 37

State 63:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (81) field ::= LEFT_BRACKET exp RIGHT_BRACKET EQUAL exp *

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 81

State 64:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (80) field ::= NAME EQUAL exp *

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 80

State 65:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (79) field ::= exp *

                            OR shift  28
                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 79

State 66:
          exp ::= exp * OR exp
     (46) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                           AND shift  25
                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 46

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (47) exp ::= exp AND exp *
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                          LESS shift  24
                    LESS_EQUAL shift  24
                       GREATER shift  24
                 GREATER_EQUAL shift  24
                   EQUAL_EQUAL shift  24
                     NOT_EQUAL shift  24
                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 47

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
     (49) exp ::= exp DOT_DOT exp *
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 49

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
     (48) exp ::= exp LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp *
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                       DOT_DOT shift  23
                          PLUS shift  22
                         MINUS shift  22
                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 48

State 70:
     (17) stat ::= functioncall *
     (59) prefixexp ::= functioncall *

              LEFT_PARANTHESIS reduce 59
                         COLON reduce 59
                           DOT reduce 59
                        STRING reduce 59
                  LEFT_BRACKET reduce 59
                    LEFT_BRACE reduce 59
                     {default} reduce 17

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
     (50) exp ::= exp PLUS|MINUS exp *
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                      MULTIPLY shift  21
                        DIVIDE shift  21
                        MODULO shift  21
                         RAISE shift  20
                     {default} reduce 50

State 72:
          tableconstructor ::= LEFT_BRACE fieldlist * RIGHT_BRACE
          tableconstructor ::= LEFT_BRACE fieldlist * COMMA|SEMICOLON RIGHT_BRACE
          fieldlist ::= fieldlist * COMMA|SEMICOLON field

                     SEMICOLON shift  4
                         COMMA shift  4
                   RIGHT_BRACE shift  133

State 73:
     (53) setlist ::= var *
     (58) prefixexp ::= var *

                         EQUAL reduce 53
                         COMMA reduce 53
                     {default} reduce 58

State 74:
     (28) binding ::= LOCAL namelist *
          binding ::= LOCAL namelist * EQUAL explist1
          namelist ::= namelist * COMMA NAME

                         EQUAL shift  6
                         COMMA shift  85
                     {default} reduce 28

State 75:
          repetition ::= FOR namelist * IN explist1
          namelist ::= namelist * COMMA NAME

                            IN shift  8
                         COMMA shift  85

State 76:
     (54) setlist ::= setlist COMMA var *
     (58) prefixexp ::= var *

                         EQUAL reduce 54
                         COMMA reduce 54
                     {default} reduce 58

State 77:
          stat ::= setlist * EQUAL explist1
          setlist ::= setlist * COMMA var

                         EQUAL shift  10
                         COMMA shift  30

State 78:
     (31) funcname ::= dottedname *
          funcname ::= dottedname * COLON NAME
          dottedname ::= dottedname * DOT NAME

                         COLON shift  90
                           DOT shift  89
                     {default} reduce 31

State 79:
     (20) conds ::= condlist *
          conds ::= condlist * ELSE block
          condlist ::= condlist * ELSEIF cond

                          ELSE shift  41
                        ELSEIF shift  11
                     {default} reduce 20

State 80:
          explist1 ::= explist1 * COMMA exp
          args ::= LEFT_PARANTHESIS explist1 * RIGHT_PARANTHESIS

                         COMMA shift  15
             RIGHT_PARANTHESIS shift  125

State 81:
          namelist ::= namelist COMMA * NAME
          parlist ::= namelist COMMA * DOT_DOT_DOT

                          NAME shift  138
                   DOT_DOT_DOT shift  137

State 82:
          binding ::= LOCAL FUNCTION * NAME funcbody

                          NAME shift  36

State 83:
     (29) binding ::= LOCAL namelist EQUAL explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  15
                     {default} reduce 29

State 84:
     (27) laststat ::= RETURN explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  15
                     {default} reduce 27

State 85:
          namelist ::= namelist COMMA * NAME

                          NAME shift  138

State 86:
     (19) repetition ::= FOR namelist IN explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  15
                     {default} reduce 19

State 87:
          repetition ::= FOR NAME * EQUAL explist23
     (35) namelist ::= NAME *

                         EQUAL shift  9
                     {default} reduce 35

State 88:
     (16) stat ::= setlist EQUAL explist1 *
          explist1 ::= explist1 * COMMA exp

                         COMMA shift  15
                     {default} reduce 16

State 89:
          dottedname ::= dottedname DOT * NAME

                          NAME shift  112

State 90:
          funcname ::= dottedname COLON * NAME

                          NAME shift  113

State 91:
          stat ::= IF conds * END

                           END shift  119

State 92:
          ublock ::= block * UNTIL exp

                         UNTIL shift  14

State 93:
          stat ::= repetition DO block * END

                           END shift  121

State 94:
          stat ::= repetition * DO block END

                            DO shift  42

State 95:
          functioncall ::= prefixexp COLON * NAME args

                          NAME shift  34

State 96:
          var ::= prefixexp DOT * NAME

                          NAME shift  128

State 97:
          field ::= LEFT_BRACKET exp RIGHT_BRACKET * EQUAL exp

                         EQUAL shift  16

State 98:
     (55) var ::= NAME *
          field ::= NAME * EQUAL exp

                         EQUAL shift  18
                     {default} reduce 55

State 99:
          params ::= LEFT_PARANTHESIS parlist * RIGHT_PARANTHESIS

             RIGHT_PARANTHESIS shift  136

State 100:
          namelist ::= namelist * COMMA NAME
     (71) parlist ::= namelist *
          parlist ::= namelist * COMMA DOT_DOT_DOT

                         COMMA shift  81
                     {default} reduce 71

State 101:
          funcbody ::= params block * END

                           END shift  140

State 102:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp
     (52) exp ::= exp RAISE exp *

                         RAISE shift  20
                     {default} reduce 52

State 103:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
     (51) exp ::= exp MULTIPLY|DIVIDE|MODULO exp *
          exp ::= exp * RAISE exp

                         RAISE shift  20
                     {default} reduce 51

State 104:
     (45) exp ::= NOT|HASH|MINUS exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * LESS|LESS_EQUAL|GREATER|GREATER_EQUAL|EQUAL_EQUAL|NOT_EQUAL exp
          exp ::= exp * DOT_DOT exp
          exp ::= exp * PLUS|MINUS exp
          exp ::= exp * MULTIPLY|DIVIDE|MODULO exp
          exp ::= exp * RAISE exp

                         RAISE shift  20
                     {default} reduce 45

State 105:
          stat ::= WHILE exp DO block * END

                           END shift  149

State 106:
          stat ::= DO block * END

                           END shift  150

State 107:
      (0) chunk ::= block *

                             $ reduce 0

State 108:
     (30) binding ::= LOCAL FUNCTION NAME funcbody *

                     {default} reduce 30

State 109:
     (25) laststat ::= BREAK *

                     {default} reduce 25

State 110:
     (18) repetition ::= FOR NAME EQUAL explist23 *

                     {default} reduce 18

State 111:
     (33) dottedname ::= NAME *

                     {default} reduce 33

State 112:
     (34) dottedname ::= dottedname DOT NAME *

                     {default} reduce 34

State 113:
     (32) funcname ::= dottedname COLON NAME *

                     {default} reduce 32

State 114:
     (15) stat ::= FUNCTION funcname funcbody *

                     {default} reduce 15

State 115:
     (22) condlist ::= cond *

                     {default} reduce 22

State 116:
     (24) cond ::= exp THEN block *

                     {default} reduce 24

State 117:
     (23) condlist ::= condlist ELSEIF cond *

                     {default} reduce 23

State 118:
     (21) conds ::= condlist ELSE block *

                     {default} reduce 21

State 119:
     (14) stat ::= IF conds END *

                     {default} reduce 14

State 120:
     (13) stat ::= REPEAT ublock *

                     {default} reduce 13

State 121:
     (12) stat ::= repetition DO block END *

                     {default} reduce 12

State 122:
     (66) args ::= STRING *

                     {default} reduce 66

State 123:
     (65) args ::= tableconstructor *

                     {default} reduce 65

State 124:
     (63) args ::= LEFT_PARANTHESIS RIGHT_PARANTHESIS *

                     {default} reduce 63

State 125:
     (64) args ::= LEFT_PARANTHESIS explist1 RIGHT_PARANTHESIS *

                     {default} reduce 64

State 126:
     (62) functioncall ::= prefixexp COLON NAME args *

                     {default} reduce 62

State 127:
     (61) functioncall ::= prefixexp args *

                     {default} reduce 61

State 128:
     (57) var ::= prefixexp DOT NAME *

                     {default} reduce 57

State 129:
     (56) var ::= prefixexp LEFT_BRACKET exp RIGHT_BRACKET *

                     {default} reduce 56

State 130:
     (77) fieldlist ::= field *

                     {default} reduce 77

State 131:
     (78) fieldlist ::= fieldlist COMMA|SEMICOLON field *

                     {default} reduce 78

State 132:
     (76) tableconstructor ::= LEFT_BRACE fieldlist COMMA|SEMICOLON RIGHT_BRACE *

                     {default} reduce 76

State 133:
     (75) tableconstructor ::= LEFT_BRACE fieldlist RIGHT_BRACE *

                     {default} reduce 75

State 134:
     (74) tableconstructor ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 74

State 135:
     (72) parlist ::= DOT_DOT_DOT *

                     {default} reduce 72

State 136:
     (69) params ::= LEFT_PARANTHESIS parlist RIGHT_PARANTHESIS *

                     {default} reduce 69

State 137:
     (73) parlist ::= namelist COMMA DOT_DOT_DOT *

                     {default} reduce 73

State 138:
     (36) namelist ::= namelist COMMA NAME *

                     {default} reduce 36

State 139:
     (35) namelist ::= NAME *

                     {default} reduce 35

State 140:
     (68) funcbody ::= params block END *

                     {default} reduce 68

State 141:
     (67) function ::= FUNCTION funcbody *

                     {default} reduce 67

State 142:
     (60) prefixexp ::= OPEN exp RIGHT_PARANTHESIS *

                     {default} reduce 60

State 143:
     (59) prefixexp ::= functioncall *

                     {default} reduce 59

State 144:
     (58) prefixexp ::= var *

                     {default} reduce 58

State 145:
     (55) var ::= NAME *

                     {default} reduce 55

State 146:
     (44) exp ::= tableconstructor *

                     {default} reduce 44

State 147:
     (42) exp ::= function *

                     {default} reduce 42

State 148:
     (41) exp ::= NIL|TRUE|FALSE|NUMBER|STRING|DOT_DOT_DOT *

                     {default} reduce 41

State 149:
     (11) stat ::= WHILE exp DO block END *

                     {default} reduce 11

State 150:
     (10) stat ::= DO block END *

                     {default} reduce 10

State 151:
      (9) statlist ::= statlist stat semi *

                     {default} reduce 9

State 152:
      (7) scope ::= scope statlist binding semi *

                     {default} reduce 7

State 153:
      (4) block ::= scope statlist laststat semi *

                     {default} reduce 4

State 154:
      (1) semi ::= SEMICOLON *

                     {default} reduce 1

----------------------------------------------------
Symbols:
    0: $:
    1: OPEN
    2: LEFT_PARANTHESIS
    3: SEMICOLON
    4: UNTIL
    5: DO
    6: END
    7: WHILE
    8: REPEAT
    9: IF
   10: FUNCTION
   11: EQUAL
   12: FOR
   13: NAME
   14: IN
   15: ELSE
   16: ELSEIF
   17: THEN
   18: BREAK
   19: RETURN
   20: LOCAL
   21: COLON
   22: DOT
   23: COMMA
   24: OR
   25: AND
   26: LESS
   27: LESS_EQUAL
   28: GREATER
   29: GREATER_EQUAL
   30: EQUAL_EQUAL
   31: NOT_EQUAL
   32: DOT_DOT
   33: PLUS
   34: MINUS
   35: MULTIPLY
   36: DIVIDE
   37: MODULO
   38: NOT
   39: HASH
   40: RAISE
   41: NIL
   42: TRUE
   43: FALSE
   44: NUMBER
   45: STRING
   46: DOT_DOT_DOT
   47: LEFT_BRACKET
   48: RIGHT_BRACKET
   49: RIGHT_PARANTHESIS
   50: LEFT_BRACE
   51: RIGHT_BRACE
   52: error:
   53: chunk: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME BREAK RETURN LOCAL
   54: block: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME BREAK RETURN LOCAL
   55: semi: <lambda> SEMICOLON
   56: scope: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME LOCAL
   57: statlist: <lambda> OPEN DO WHILE REPEAT IF FUNCTION FOR NAME
   58: laststat: BREAK RETURN
   59: ublock: OPEN UNTIL DO WHILE REPEAT IF FUNCTION FOR NAME BREAK RETURN LOCAL
   60: exp: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   61: binding: LOCAL
   62: stat: OPEN DO WHILE REPEAT IF FUNCTION FOR NAME
   63: repetition: FOR
   64: conds: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   65: funcname: NAME
   66: funcbody: LEFT_PARANTHESIS
   67: setlist: OPEN NAME
   68: explist1: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   69: functioncall: OPEN NAME
   70: explist23: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   71: namelist: NAME
   72: condlist: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   73: cond: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACE
   74: dottedname: NAME
   75: function: FUNCTION
   76: prefixexp: OPEN NAME
   77: tableconstructor: LEFT_BRACE
   78: var: OPEN NAME
   79: args: LEFT_PARANTHESIS STRING LEFT_BRACE
   80: params: LEFT_PARANTHESIS
   81: parlist: <lambda> NAME DOT_DOT_DOT
   82: fieldlist: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACKET LEFT_BRACE
   83: field: OPEN FUNCTION NAME MINUS NOT HASH NIL TRUE FALSE NUMBER STRING DOT_DOT_DOT LEFT_BRACKET LEFT_BRACE
